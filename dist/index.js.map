{
  "version": 3,
  "sources": ["../shared/schema.ts", "../server/db.ts", "../server/services/stripe.ts", "../server/storage.ts", "../server/index.ts", "../server/routes.ts", "../server/services/openai-trimodal.ts", "../server/firebase-admin.ts", "../server/firebase-auth.ts", "../server/middleware/security.ts", "../server/vite.ts", "../vite.config.ts", "../server/middleware/security-headers.ts", "../server/config/env-validation.ts", "../server/config/logger.ts"],
  "sourcesContent": ["import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, jsonb, timestamp, boolean, index, integer, serial, check, foreignKey } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table for Replit Auth\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\n// User storage table with email/password authentication\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: varchar(\"email\").notNull().unique(),\n  password: varchar(\"password\"), // Optional for Firebase users\n  firebaseUid: varchar(\"firebase_uid\").unique(), // Firebase UID\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  emailVerified: boolean(\"email_verified\").default(false),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  // Hook Line Studio specific fields\n  company: text(\"company\"),\n  industry: text(\"industry\"),\n  role: text(\"role\"),\n  audience: text(\"audience\"),\n  voice: text(\"voice\"),\n  bannedTerms: jsonb(\"banned_terms\").$type<string[]>().default([]),\n  safety: text(\"safety\").default(\"standard\"), // family-friendly, standard, edgy\n  // Generation tracking system\n  proGenerationsUsed: integer(\"pro_generations_used\").default(0), // GPT-4o generations used this period\n  draftGenerationsUsed: integer(\"draft_generations_used\").default(0), // GPT-4o-mini generations used this period\n  weeklyDraftReset: timestamp(\"weekly_draft_reset\").defaultNow(), // Reset date for free tier weekly limit\n  // Fixed credit system data types (backwards compatible)\n  freeCredits: integer(\"free_credits\").default(5),\n  usedCredits: integer(\"used_credits\").default(0),\n  isPremium: boolean(\"is_premium\").default(false),\n  // Stripe integration\n  stripeCustomerId: varchar(\"stripe_customer_id\"),\n  stripeSubscriptionId: varchar(\"stripe_subscription_id\"),\n  subscriptionStatus: varchar(\"subscription_status\").default(\"free\"), // free, active, canceled, past_due\n  subscriptionPlan: varchar(\"subscription_plan\").default(\"free\"), // free, starter, creator, pro, teams\n  currentPeriodEnd: timestamp(\"current_period_end\"),\n  cancelAtPeriodEnd: boolean(\"cancel_at_period_end\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n}, (table) => [\n  // Performance indexes for frequent queries\n  index(\"idx_users_email\").on(table.email),\n  index(\"idx_users_firebase_uid\").on(table.firebaseUid),\n  index(\"idx_users_stripe_customer_id\").on(table.stripeCustomerId),\n  index(\"idx_users_created_at\").on(table.createdAt),\n  index(\"idx_users_subscription_status\").on(table.subscriptionStatus),\n  // Data integrity constraints\n  check(\"email_format\", sql`${table.email} ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$'`),\n  check(\"safety_values\", sql`${table.safety} IN ('family-friendly', 'standard', 'edgy')`),\n  check(\"subscription_status_values\", sql`${table.subscriptionStatus} IN ('free', 'active', 'canceled', 'past_due', 'trialing', 'unpaid')`),\n  check(\"subscription_plan_values\", sql`${table.subscriptionPlan} IN ('free', 'starter', 'creator', 'pro', 'teams')`),\n  check(\"positive_generations\", sql`${table.proGenerationsUsed} >= 0 AND ${table.draftGenerationsUsed} >= 0`),\n  check(\"positive_credits\", sql`${table.freeCredits} >= 0 AND ${table.usedCredits} >= 0`)\n]);\n\nexport const hookGenerations = pgTable(\"hook_generations\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  platform: text(\"platform\").notNull(), // tiktok, instagram, youtube\n  objective: text(\"objective\").notNull(), // watch_time, shares, saves, ctr\n  topic: text(\"topic\").notNull(),\n  modelType: text(\"model_type\").notNull().default(\"gpt-4o\"), // gpt-4o (pro), gpt-4o-mini (draft)\n  hooks: jsonb(\"hooks\").$type<{\n    // Tri-modal hook architecture\n    verbalHook: string;           // Primary spoken/written hook\n    visualHook?: string;          // Visual direction/suggestion\n    textualHook?: string;         // On-screen text overlay\n    \n    // Enhanced framework and psychological data\n    framework: string;            // Primary copywriting framework\n    psychologicalDriver: string;  // Core psychological trigger (curiosity_gap, value_hit, etc.)\n    hookCategory: string;         // Category from research taxonomy (Question-Based, Statement-Based, etc.)\n    riskFactor: \"low\" | \"medium\" | \"high\"; // Risk assessment\n    \n    // Performance metrics\n    score: number;               // AI composite score (0-5)\n    wordCount: number;           // Word count for verbal hook\n    scoreBreakdown: string;      // Detailed scoring explanation\n    \n    // Context and strategy\n    rationale: string;           // Why this hook works\n    platformNotes: string;       // Platform-specific guidance\n    contentTypeStrategy: \"curiosity_gap\" | \"value_hit\"; // Strategic approach\n    \n    // Enhanced platform-specific elements\n    platformSpecific?: {\n      tiktokColdOpen?: string;    // TikTok visual cold-open suggestion\n      instagramOverlay?: string;  // Instagram text overlay (\u226424 chars)\n      youtubeProofCue?: string;   // YouTube proof element\n    };\n    \n    // Failure point mitigation\n    promiseContentMatch: boolean; // Ensures hook promise matches content capability\n    specificityScore: number;     // Measures concrete vs vague language (0-1)\n    freshnessScore: number;       // Novelty vs hook fatigue (0-1)\n  }[]>().notNull(),\n  topThreeVariants: jsonb(\"top_three_variants\").$type<{\n    // Enhanced top variants with full tri-modal data\n    verbalHook: string;\n    visualHook?: string;\n    textualHook?: string;\n    variants: string[];           // Alternative versions of the verbal hook\n    framework: string;\n    psychologicalDriver: string;\n    score: number;\n    scoreBreakdown: string;\n    reHookStrategy?: string;      // Strategy for sustaining momentum\n  }[]>(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n}, (table) => [\n  // Performance indexes for frequent queries\n  index(\"idx_hook_generations_user_id\").on(table.userId),\n  index(\"idx_hook_generations_created_at\").on(table.createdAt),\n  index(\"idx_hook_generations_platform\").on(table.platform),\n  index(\"idx_hook_generations_user_platform\").on(table.userId, table.platform),\n  index(\"idx_hook_generations_user_created\").on(table.userId, table.createdAt),\n  // Data integrity constraints\n  check(\"platform_values\", sql`${table.platform} IN ('tiktok', 'instagram', 'youtube', 'twitter', 'linkedin')`),\n  check(\"objective_values\", sql`${table.objective} IN ('watch_time', 'shares', 'saves', 'ctr', 'engagement', 'conversions')`),\n  check(\"model_type_values\", sql`${table.modelType} IN ('gpt-4o', 'gpt-4o-mini')`)\n]);\n\nexport const favoriteHooks = pgTable(\"favorite_hooks\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  generationId: varchar(\"generation_id\").references(() => hookGenerations.id, { onDelete: \"set null\" }),\n  // Legacy single hook field (deprecated)\n  hook: text(\"hook\"),\n  // New tri-modal hook data\n  hookData: jsonb(\"hook_data\").$type<{\n    verbalHook: string;           // Primary spoken/written hook\n    visualHook?: string;          // Visual direction/suggestion\n    textualHook?: string;         // On-screen text overlay\n    framework: string;            // Primary copywriting framework\n    psychologicalDriver?: string; // Core psychological trigger\n    hookCategory?: string;        // Category from research taxonomy\n    score?: number;              // AI composite score (0-5)\n    scoreBreakdown?: string;     // Detailed scoring explanation\n    rationale?: string;          // Why this hook works\n    platformNotes?: string;      // Platform-specific guidance\n    platformSpecific?: {\n      tiktokColdOpen?: string;    // TikTok visual cold-open suggestion\n      instagramOverlay?: string;  // Instagram text overlay (\u226424 chars)\n      youtubeProofCue?: string;   // YouTube proof element\n    };\n  }>(),\n  framework: text(\"framework\").notNull(),\n  platformNotes: text(\"platform_notes\").notNull(),\n  topic: text(\"topic\"), // Add topic field\n  platform: text(\"platform\"), // Add platform field\n  createdAt: timestamp(\"created_at\").defaultNow(),\n}, (table) => [\n  // Performance indexes for frequent queries\n  index(\"idx_favorite_hooks_user_id\").on(table.userId),\n  index(\"idx_favorite_hooks_created_at\").on(table.createdAt),\n  index(\"idx_favorite_hooks_user_created\").on(table.userId, table.createdAt),\n  index(\"idx_favorite_hooks_generation_id\").on(table.generationId),\n  // Prevent duplicate favorites for same generation\n  index(\"idx_favorite_hooks_unique_user_generation\").on(table.userId, table.generationId)\n]);\n\n// Recent hooks for novelty checking\nexport const userRecentHooks = pgTable(\"user_recent_hooks\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  hook: text(\"hook\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n}, (table) => [\n  // Performance indexes for frequent queries\n  index(\"idx_user_recent_hooks_user_id\").on(table.userId),\n  index(\"idx_user_recent_hooks_created_at\").on(table.createdAt),\n  index(\"idx_user_recent_hooks_user_created\").on(table.userId, table.createdAt)\n]);\n\n// Analytics Events Table for conversion tracking\nexport const analyticsEvents = pgTable(\"analytics_events\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  sessionId: varchar(\"session_id\").notNull(),\n  userId: varchar(\"user_id\").references(() => users.id, { onDelete: \"set null\" }),\n  eventType: varchar(\"event_type\").notNull(),\n  eventData: jsonb(\"event_data\").$type<{\n    component?: string;\n    variant?: string;\n    platform?: string;\n    ctaId?: string;\n    ctaText?: string;\n    ctaPosition?: string;\n    viewDuration?: number;\n    scrollDepth?: number;\n    conversionValue?: number;\n    testVariant?: string;\n    metadata?: Record<string, any>;\n  }>().notNull().default({}),\n  deviceInfo: jsonb(\"device_info\").$type<{\n    userAgent: string;\n    platform: 'desktop' | 'mobile' | 'tablet';\n    screenResolution: [number, number];\n    timezone: string;\n    language: string;\n  }>().notNull(),\n  pageInfo: jsonb(\"page_info\").$type<{\n    url: string;\n    referrer: string;\n    title: string;\n    path: string;\n    queryParams: Record<string, string>;\n  }>().notNull(),\n  ipAddress: varchar(\"ip_address\"), // Nullable for privacy compliance\n  userConsent: boolean(\"user_consent\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n}, (table) => [\n  // Performance indexes for analytics queries\n  index(\"idx_analytics_events_session_id\").on(table.sessionId),\n  index(\"idx_analytics_events_user_id\").on(table.userId),\n  index(\"idx_analytics_events_event_type\").on(table.eventType),\n  index(\"idx_analytics_events_created_at\").on(table.createdAt),\n  index(\"idx_analytics_events_user_event_type\").on(table.userId, table.eventType),\n  index(\"idx_analytics_events_session_created\").on(table.sessionId, table.createdAt),\n  // Data integrity constraints\n  check(\"event_type_values\", sql`${table.eventType} IN ('cta_click', 'cta_view', 'cta_hover', 'trust_signal_view', 'urgency_indicator_view', 'funnel_step', 'ab_test_exposure', 'error', 'performance', 'page_view', 'user_identified', 'session_reset', 'conversion')`),\n]);\n\n// A/B Testing Configuration Table\nexport const abTests = pgTable(\"ab_tests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  testName: varchar(\"test_name\").notNull(),\n  testDescription: text(\"test_description\"),\n  status: varchar(\"status\").notNull().default(\"draft\"),\n  variants: jsonb(\"variants\").$type<Record<string, {\n    id: string;\n    weight: number;\n    config: Record<string, any>;\n  }>>().notNull(),\n  trafficAllocation: integer(\"traffic_allocation\").notNull().default(100), // 0-100\n  targetingRules: jsonb(\"targeting_rules\").$type<{\n    userSegments?: string[];\n    geoTargeting?: string[];\n    deviceTypes?: ('mobile' | 'tablet' | 'desktop')[];\n    customRules?: Record<string, any>;\n  }>(),\n  minSampleSize: integer(\"min_sample_size\").default(100),\n  significanceLevel: integer(\"significance_level\").default(95), // 95% confidence\n  primaryMetric: varchar(\"primary_metric\").default(\"conversion_rate\"),\n  startDate: timestamp(\"start_date\"),\n  endDate: timestamp(\"end_date\"),\n  winnerVariant: varchar(\"winner_variant\"),\n  createdBy: varchar(\"created_by\").references(() => users.id, { onDelete: \"set null\" }),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n}, (table) => [\n  // Performance indexes\n  index(\"idx_ab_tests_status\").on(table.status),\n  index(\"idx_ab_tests_created_at\").on(table.createdAt),\n  index(\"idx_ab_tests_start_end_date\").on(table.startDate, table.endDate),\n  // Data integrity constraints\n  check(\"status_values\", sql`${table.status} IN ('draft', 'running', 'paused', 'completed', 'archived')`),\n  check(\"traffic_allocation_range\", sql`${table.trafficAllocation} >= 0 AND ${table.trafficAllocation} <= 100`),\n  check(\"significance_level_range\", sql`${table.significanceLevel} >= 90 AND ${table.significanceLevel} <= 99`)\n]);\n\n// A/B Test Participants Table\nexport const abTestParticipants = pgTable(\"ab_test_participants\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  testId: varchar(\"test_id\").notNull().references(() => abTests.id, { onDelete: \"cascade\" }),\n  sessionId: varchar(\"session_id\").notNull(),\n  userId: varchar(\"user_id\").references(() => users.id, { onDelete: \"set null\" }),\n  variantId: varchar(\"variant_id\").notNull(),\n  exposureTime: timestamp(\"exposure_time\").defaultNow(),\n  converted: boolean(\"converted\").default(false),\n  conversionTime: timestamp(\"conversion_time\"),\n  conversionValue: integer(\"conversion_value\").default(0),\n  metadata: jsonb(\"metadata\").$type<Record<string, any>>().default({}),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n}, (table) => [\n  // Performance indexes\n  index(\"idx_ab_test_participants_test_id\").on(table.testId),\n  index(\"idx_ab_test_participants_session_id\").on(table.sessionId),\n  index(\"idx_ab_test_participants_user_id\").on(table.userId),\n  index(\"idx_ab_test_participants_variant_id\").on(table.variantId),\n  index(\"idx_ab_test_participants_test_variant\").on(table.testId, table.variantId),\n  index(\"idx_ab_test_participants_converted\").on(table.converted),\n  // Unique constraint to prevent duplicate participation\n  index(\"idx_ab_test_participants_unique\").on(table.testId, table.sessionId)\n]);\n\n// Conversion Funnels Table\nexport const conversionFunnels = pgTable(\"conversion_funnels\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  funnelName: varchar(\"funnel_name\").notNull(),\n  funnelDescription: text(\"funnel_description\"),\n  steps: jsonb(\"steps\").$type<Array<{\n    stepIndex: number;\n    stepName: string;\n    stepType: string;\n    requiredEvent: string;\n    optional: boolean;\n  }>>().notNull(),\n  isActive: boolean(\"is_active\").default(true),\n  createdBy: varchar(\"created_by\").references(() => users.id, { onDelete: \"set null\" }),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n}, (table) => [\n  // Performance indexes\n  index(\"idx_conversion_funnels_active\").on(table.isActive),\n  index(\"idx_conversion_funnels_created_at\").on(table.createdAt),\n  index(\"idx_conversion_funnels_name\").on(table.funnelName)\n]);\n\n// Funnel Events Table\nexport const funnelEvents = pgTable(\"funnel_events\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  funnelId: varchar(\"funnel_id\").notNull().references(() => conversionFunnels.id, { onDelete: \"cascade\" }),\n  sessionId: varchar(\"session_id\").notNull(),\n  userId: varchar(\"user_id\").references(() => users.id, { onDelete: \"set null\" }),\n  stepIndex: integer(\"step_index\").notNull(),\n  stepName: varchar(\"step_name\").notNull(),\n  previousStep: varchar(\"previous_step\"),\n  timeFromPrevious: integer(\"time_from_previous\"), // in milliseconds\n  abandoned: boolean(\"abandoned\").default(false),\n  completed: boolean(\"completed\").default(false),\n  eventData: jsonb(\"event_data\").$type<Record<string, any>>().default({}),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n}, (table) => [\n  // Performance indexes\n  index(\"idx_funnel_events_funnel_id\").on(table.funnelId),\n  index(\"idx_funnel_events_session_id\").on(table.sessionId),\n  index(\"idx_funnel_events_user_id\").on(table.userId),\n  index(\"idx_funnel_events_step_index\").on(table.stepIndex),\n  index(\"idx_funnel_events_funnel_session\").on(table.funnelId, table.sessionId),\n  index(\"idx_funnel_events_completed\").on(table.completed),\n  index(\"idx_funnel_events_abandoned\").on(table.abandoned)\n]);\n\n// User Consent Management Table\nexport const userConsent = pgTable(\"user_consent\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  sessionId: varchar(\"session_id\").notNull(),\n  userId: varchar(\"user_id\").references(() => users.id, { onDelete: \"cascade\" }),\n  analyticsConsent: boolean(\"analytics_consent\").default(false),\n  marketingConsent: boolean(\"marketing_consent\").default(false),\n  personalizationConsent: boolean(\"personalization_consent\").default(false),\n  consentVersion: varchar(\"consent_version\").notNull().default(\"1.0\"),\n  ipAddress: varchar(\"ip_address\"), // For legal compliance\n  userAgent: text(\"user_agent\"),\n  consentMethod: varchar(\"consent_method\").default(\"explicit\"), // explicit, implicit, essential\n  withdrawnAt: timestamp(\"withdrawn_at\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n}, (table) => [\n  // Performance indexes\n  index(\"idx_user_consent_session_id\").on(table.sessionId),\n  index(\"idx_user_consent_user_id\").on(table.userId),\n  index(\"idx_user_consent_analytics\").on(table.analyticsConsent),\n  index(\"idx_user_consent_created_at\").on(table.createdAt),\n  // Data integrity constraints\n  check(\"consent_method_values\", sql`${table.consentMethod} IN ('explicit', 'implicit', 'essential')`)\n]);\n\n// Auth schemas\nexport const registerSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n  firstName: z.string().min(1, \"First name is required\"),\n  lastName: z.string().min(1, \"Last name is required\"),\n});\n\nexport const loginSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\"),\n  password: z.string().min(1, \"Password is required\"),\n});\n\n// Enhanced validation schemas with security constraints\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  password: true,\n  createdAt: true,\n  updatedAt: true,\n}).extend({\n  // Make these fields optional since they might come from onboarding data\n  platforms: z.array(z.string()).optional(),\n  goals: z.array(z.string()).optional(),\n  examples: z.string().optional(),\n});\n\n// For Replit Auth upsert operations\nexport const upsertUserSchema = createInsertSchema(users).pick({\n  id: true,\n  email: true,\n  firstName: true,\n  lastName: true,\n  profileImageUrl: true,\n});\n\nexport const insertHookGenerationSchema = createInsertSchema(hookGenerations).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertFavoriteHookSchema = z.object({\n  userId: z.string(),\n  hook: z.string().optional(),\n  generationId: z.string().optional(),\n  framework: z.string(),\n  platformNotes: z.string(),\n  topic: z.string().optional(),\n  platform: z.string().optional(),\n  hookData: z.object({\n    verbalHook: z.string(),\n    visualHook: z.string().optional(),\n    textualHook: z.string().optional(),\n    framework: z.string(),\n    psychologicalDriver: z.string().optional(),\n    hookCategory: z.string().optional(),\n    score: z.number().optional(),\n    scoreBreakdown: z.string().optional(),\n    rationale: z.string().optional(),\n    platformNotes: z.string().optional(),\n    platformSpecific: z.object({\n      tiktokColdOpen: z.string().optional(),\n      instagramOverlay: z.string().optional(),\n      youtubeProofCue: z.string().optional(),\n    }).optional(),\n  }).optional()\n});\n\nexport const insertUserRecentHookSchema = createInsertSchema(userRecentHooks).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type RegisterData = z.infer<typeof registerSchema>;\nexport type LoginData = z.infer<typeof loginSchema>;\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type UpsertUser = z.infer<typeof upsertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertHookGeneration = z.infer<typeof insertHookGenerationSchema>;\nexport type HookGeneration = typeof hookGenerations.$inferSelect;\nexport type InsertFavoriteHook = z.infer<typeof insertFavoriteHookSchema>;\nexport type FavoriteHook = typeof favoriteHooks.$inferSelect;\nexport type InsertUserRecentHook = z.infer<typeof insertUserRecentHookSchema>;\nexport type UserRecentHook = typeof userRecentHooks.$inferSelect;\n", "import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\n// Configure WebSocket for Neon serverless, but handle Railway's connectivity timing\nneonConfig.webSocketConstructor = ws;\n\n// For Railway deployments, add more aggressive connection retry and timeout settings\nif (process.env.RAILWAY_ENVIRONMENT) {\n  neonConfig.wsProxy = (host) => {\n    // For Railway internal URLs, add retry logic\n    if (host.includes('railway.internal')) {\n      console.log(`Connecting to Railway internal database: ${host}`);\n    }\n    return `${host}`;\n  };\n}\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\n// Validate database URL format and security\nconst dbUrl = new URL(process.env.DATABASE_URL);\nif (dbUrl.protocol !== 'postgresql:' && dbUrl.protocol !== 'postgres:') {\n  throw new Error(\"DATABASE_URL must use postgresql:// protocol\");\n}\n\n// Ensure SSL is required for production\nif (process.env.NODE_ENV === 'production' && !dbUrl.searchParams.has('sslmode')) {\n  dbUrl.searchParams.set('sslmode', 'require');\n}\n\n// Optimized connection pool configuration for production performance\n// Special handling for Railway's internal URLs and timing issues\nconst isRailwayEnvironment = !!process.env.RAILWAY_ENVIRONMENT;\nconst isRailwayInternalUrl = process.env.DATABASE_URL?.includes('railway.internal');\n\nexport const pool = new Pool({ \n  connectionString: process.env.DATABASE_URL,\n  max: process.env.NODE_ENV === 'production' ? 15 : 10, // More conservative max connections\n  min: isRailwayEnvironment ? 2 : 1, // Ensure minimum connections for health checks\n  idleTimeoutMillis: 60000, // Standard idle timeout\n  connectionTimeoutMillis: isRailwayInternalUrl ? 30000 : 10000, // Generous timeout for Railway internal URLs\n  statementTimeout: 30000, // More generous statement timeout\n  query_timeout: 30000, // More generous query timeout\n  acquireTimeoutMillis: isRailwayInternalUrl ? 45000 : 15000, // Railway-optimized acquire timeout\n  createTimeoutMillis: isRailwayInternalUrl ? 30000 : 10000, // Railway-optimized create timeout\n  destroyTimeoutMillis: 5000, // Standard destroy timeout\n  reapIntervalMillis: 5000, // Standard cleanup interval\n  createRetryIntervalMillis: isRailwayInternalUrl ? 3000 : 1000, // Reasonable retries for Railway\n  propagateCreateError: true, // Show connection errors for debugging\n  // Railway-specific optimizations\n  allowExitOnIdle: false, // Keep connections alive for health checks\n  maxUses: 10000, // Standard connection rotation\n  application_name: `hooklinestudio-${process.env.RAILWAY_ENVIRONMENT || 'local'}`,\n  // Enhanced SSL configuration for Railway\n  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false\n});\n\nexport const db = drizzle({ client: pool, schema });\n\n// Database connection health checker function\nexport async function testDatabaseConnection(timeout = 10000): Promise<{ success: boolean; error?: string; connectionInfo?: any }> {\n  try {\n    const testQuery = pool.query('SELECT 1 as health, NOW() as current_time, version() as db_version');\n    const timeoutPromise = new Promise((_, reject) => \n      setTimeout(() => reject(new Error(`Database connection timeout after ${timeout}ms`)), timeout)\n    );\n    \n    const result = await Promise.race([testQuery, timeoutPromise]);\n    \n    return {\n      success: true,\n      connectionInfo: {\n        version: result.rows[0]?.db_version?.split(' ')[0] || 'unknown',\n        time: result.rows[0]?.current_time,\n        poolStats: {\n          totalCount: pool.totalCount,\n          idleCount: pool.idleCount,\n          waitingCount: pool.waitingCount\n        }\n      }\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : String(error)\n    };\n  }\n}\n\n// Initialize connection pool with retry logic for Railway\nexport async function initializeDatabase(): Promise<void> {\n  const maxRetries = 5;\n  const retryDelay = 2000; // 2 seconds\n  \n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\n    try {\n      console.log(`Database connection attempt ${attempt}/${maxRetries}...`);\n      const connectionTest = await testDatabaseConnection(15000);\n      \n      if (connectionTest.success) {\n        console.log('\u2705 Database connection established successfully');\n        console.log(`Database version: ${connectionTest.connectionInfo?.version}`);\n        return;\n      } else {\n        throw new Error(connectionTest.error);\n      }\n    } catch (error) {\n      console.log(`\u274C Database connection attempt ${attempt} failed:`, error instanceof Error ? error.message : String(error));\n      \n      if (attempt === maxRetries) {\n        console.error('\uD83D\uDEA8 Failed to establish database connection after all retries');\n        throw error;\n      }\n      \n      console.log(`\u23F3 Retrying in ${retryDelay}ms...`);\n      await new Promise(resolve => setTimeout(resolve, retryDelay));\n    }\n  }\n}", "import Stripe from \"stripe\";\nimport { storage } from \"../storage\";\n\nif (!process.env.STRIPE_SECRET_KEY) {\n  throw new Error('Missing required Stripe secret: STRIPE_SECRET_KEY');\n}\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n  apiVersion: \"2025-06-30.basil\",\n});\n\n// Subscription plans - these should match your Stripe product/price IDs\nexport const SUBSCRIPTION_PLANS = {\n  FREE: {\n    name: \"Free\",\n    priceId: null,\n    amount: 0,\n    currency: \"usd\",\n    interval: \"month\",\n    features: [\n      \"20 Draft generations per week (GPT-4o-mini)\",\n      \"Basic scoring insights\",\n      \"Community support\"\n    ],\n    limits: {\n      draftGenerationsPerWeek: 20,\n      draftGenerationsPerMonth: -1, // unlimited\n      proGenerationsPerMonth: 0,\n      exports: false,\n      priority: false,\n      modelType: \"gpt-4o-mini\"\n    }\n  },\n  STARTER: {\n    name: \"Starter\",\n    priceId: process.env.STRIPE_STARTER_PRICE_ID || \"price_starter_placeholder\",\n    amount: 9,\n    currency: \"usd\",\n    interval: \"month\",\n    features: [\n      \"100 Pro generations per month (GPT-4o)\",\n      \"Unlimited Draft generations (GPT-4o-mini)\",\n      \"Cancel anytime\"\n    ],\n    limits: {\n      proGenerationsPerMonth: 100,\n      draftGenerationsPerMonth: -1, // unlimited\n      exports: false,\n      priority: false,\n      overageRate: 3, // $3 per +100 Pro gens\n      modelType: \"both\"\n    }\n  },\n  CREATOR: {\n    name: \"Creator\",\n    priceId: process.env.STRIPE_CREATOR_PRICE_ID || \"price_creator_placeholder\",\n    amount: 15,\n    currency: \"usd\",\n    interval: \"month\",\n    features: [\n      \"200 Pro generations per month (GPT-4o)\",\n      \"Unlimited Draft generations (GPT-4o-mini)\",\n      \"Cold-open exports\"\n    ],\n    limits: {\n      proGenerationsPerMonth: 200,\n      draftGenerationsPerMonth: -1, // unlimited\n      exports: true,\n      coldOpenExports: true,\n      priority: false,\n      overageRate: 3, // $3 per +100\n      modelType: \"both\"\n    }\n  },\n  PRO: {\n    name: \"Pro\",\n    priceId: process.env.STRIPE_PRO_PRICE_ID || \"price_pro_placeholder\",\n    amount: 24,\n    currency: \"usd\",\n    interval: \"month\",\n    features: [\n      \"400 Pro generations per month (GPT-4o)\",\n      \"Unlimited Draft generations (GPT-4o-mini)\",\n      \"Sheets/CSV export\",\n      \"Advanced analytics\"\n    ],\n    limits: {\n      proGenerationsPerMonth: 400,\n      draftGenerationsPerMonth: -1, // unlimited\n      exports: true,\n      sheetsExport: true,\n      analytics: true,\n      priority: false,\n      overageRate: 2.5, // $2.50 per +100 (volume price)\n      modelType: \"both\"\n    }\n  },\n  TEAMS: {\n    name: \"Teams\",\n    priceId: process.env.STRIPE_TEAMS_PRICE_ID || \"price_teams_placeholder\",\n    amount: 59,\n    currency: \"usd\",\n    interval: \"month\",\n    features: [\n      \"1,500 Pro generations pooled per month\",\n      \"3 seats included\",\n      \"Shared style guide\",\n      \"Priority support\"\n    ],\n    limits: {\n      proGenerationsPerMonth: 1500, // pooled across team\n      draftGenerationsPerMonth: -1, // unlimited\n      exports: true,\n      teamSeats: 3,\n      sharedStyleGuide: true,\n      priority: true,\n      overageRate: 2.5, // $2.50 per +100\n      modelType: \"both\"\n    }\n  }\n};\n\nexport async function getOrCreateCustomer(userId: string, email: string, name?: string): Promise<string> {\n  try {\n    // Check if user already has a Stripe customer ID\n    const user = await storage.getUser(userId);\n    if (user?.stripeCustomerId) {\n      return user.stripeCustomerId;\n    }\n\n    // Create new Stripe customer\n    const customer = await stripe.customers.create({\n      email,\n      name: name || email,\n      metadata: {\n        userId\n      }\n    });\n\n    // Save customer ID to database\n    await storage.updateStripeCustomerId(userId, customer.id);\n    \n    return customer.id;\n  } catch (error) {\n    console.error(\"Error creating/retrieving customer:\", error);\n    throw error;\n  }\n}\n\nexport async function createSubscription(userId: string, email: string, priceId: string, promotionCode?: string) {\n  try {\n    const customerId = await getOrCreateCustomer(userId, email);\n    \n    const subscriptionData: Stripe.SubscriptionCreateParams = {\n      customer: customerId,\n      items: [{\n        price: priceId,\n      }],\n      payment_behavior: 'default_incomplete',\n      payment_settings: { save_default_payment_method: 'on_subscription' },\n      expand: ['latest_invoice.payment_intent'],\n      trial_period_days: 7, // 7-day free trial\n    };\n\n    // Add coupon if provided (for 20% discount)\n    if (promotionCode) {\n      subscriptionData.discounts = [{\n        coupon: promotionCode\n      }];\n    }\n\n    const subscription = await stripe.subscriptions.create(subscriptionData);\n\n    // Save subscription ID to database\n    await storage.updateUserStripeInfo(userId, {\n      stripeCustomerId: customerId,\n      stripeSubscriptionId: subscription.id\n    });\n\n    return {\n      subscriptionId: subscription.id,\n      clientSecret: subscription.latest_invoice && typeof subscription.latest_invoice === 'object' \n        ? (subscription.latest_invoice as any).payment_intent?.client_secret \n        : null,\n      customerId\n    };\n  } catch (error) {\n    console.error(\"Error creating subscription:\", error);\n    throw error;\n  }\n}\n\nexport async function createBillingPortalSession(customerId: string, returnUrl: string) {\n  try {\n    const session = await stripe.billingPortal.sessions.create({\n      customer: customerId,\n      return_url: returnUrl,\n    });\n    \n    return session.url;\n  } catch (error) {\n    console.error(\"Error creating billing portal session:\", error);\n    throw error;\n  }\n}\n\nexport async function getSubscriptionStatus(subscriptionId: string) {\n  try {\n    const subscription = await stripe.subscriptions.retrieve(subscriptionId);\n    return {\n      status: subscription.status,\n      currentPeriodEnd: new Date((subscription as any).current_period_end * 1000),\n      cancelAtPeriodEnd: (subscription as any).cancel_at_period_end,\n      trialEnd: (subscription as any).trial_end,\n    };\n  } catch (error) {\n    console.error(\"Error getting subscription status:\", error);\n    throw error;\n  }\n}\n\nexport async function cancelSubscription(subscriptionId: string) {\n  try {\n    const subscription = await stripe.subscriptions.update(subscriptionId, {\n      cancel_at_period_end: true,\n    });\n    \n    return subscription;\n  } catch (error) {\n    console.error(\"Error canceling subscription:\", error);\n    throw error;\n  }\n}\n\n// Handle Stripe webhooks\nexport async function handleStripeWebhook(event: any): Promise<void> {\n  try {\n    switch (event.type) {\n      case 'invoice.payment_succeeded':\n        const invoice = event.data.object;\n        if (invoice.subscription) {\n          const subscription = await stripe.subscriptions.retrieve(invoice.subscription);\n          const customer = await stripe.customers.retrieve(subscription.customer as string) as any;\n          \n          if (customer.metadata?.userId) {\n            await storage.updateUser(customer.metadata.userId, {\n              subscriptionStatus: 'active',\n              currentPeriodEnd: new Date((subscription as any).current_period_end * 1000),\n              cancelAtPeriodEnd: (subscription as any).cancel_at_period_end\n            });\n          }\n        }\n        break;\n\n      case 'invoice.payment_failed':\n        const failedInvoice = event.data.object;\n        if (failedInvoice.subscription) {\n          const subscription = await stripe.subscriptions.retrieve(failedInvoice.subscription);\n          const customer = await stripe.customers.retrieve(subscription.customer as string) as any;\n          \n          if (customer.metadata?.userId) {\n            await storage.updateUser(customer.metadata.userId, {\n              subscriptionStatus: 'past_due'\n            });\n          }\n        }\n        break;\n\n      case 'customer.subscription.deleted':\n        const canceledSubscription = event.data.object;\n        const customer = await stripe.customers.retrieve(canceledSubscription.customer) as any;\n        \n        if (customer.metadata?.userId) {\n          await storage.updateUser(customer.metadata.userId, {\n            subscriptionStatus: 'canceled',\n            subscriptionPlan: 'free',\n            stripeSubscriptionId: null,\n            cancelAtPeriodEnd: false\n          });\n        }\n        break;\n\n      case 'customer.subscription.updated':\n        const updatedSubscription = event.data.object;\n        const subCustomer = await stripe.customers.retrieve(updatedSubscription.customer) as any;\n        \n        if (subCustomer.metadata?.userId) {\n          await storage.updateUser(subCustomer.metadata.userId, {\n            subscriptionStatus: updatedSubscription.status,\n            currentPeriodEnd: new Date(updatedSubscription.current_period_end * 1000),\n            cancelAtPeriodEnd: updatedSubscription.cancel_at_period_end\n          });\n        }\n        break;\n\n      default:\n        console.log(`Unhandled event type: ${event.type}`);\n    }\n  } catch (error) {\n    console.error('Error handling webhook:', error);\n    throw error;\n  }\n}", "import { users, hookGenerations, favoriteHooks, userRecentHooks, type User, type InsertUser, type UpsertUser, type HookGeneration, type InsertHookGeneration, type FavoriteHook, type InsertFavoriteHook, type UserRecentHook, type InsertUserRecentHook } from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, desc, inArray, and, gte, lte, sql } from \"drizzle-orm\";\n\nexport interface IStorage {\n  // User operations\n  getUser(id: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  getUserByFirebaseUid(firebaseUid: string): Promise<User | undefined>;\n  createUser(user: { email: string; password: string; firstName: string; lastName: string }): Promise<User>;\n  createUserFromFirebase(user: { firebaseUid: string; email: string; firstName: string; lastName: string; emailVerified: boolean }): Promise<User>;\n  updateUser(id: string, updates: Partial<InsertUser>): Promise<User | undefined>;\n  // For Replit Auth\n  upsertUser(user: UpsertUser): Promise<User>;\n  \n  // Credit system (legacy)\n  incrementUserCredits(userId: string): Promise<User | undefined>;\n  checkUserCanGenerate(userId: string): Promise<{ canGenerate: boolean; remainingCredits: number; isAtLimit: boolean }>;\n  resetUserCredits(userId: string): Promise<User | undefined>;\n  \n  // New generation tracking system\n  incrementUserGenerations(userId: string, modelType: \"gpt-4o\" | \"gpt-4o-mini\"): Promise<User | undefined>;\n  checkUserCanGenerateWithModel(userId: string, modelType: \"gpt-4o\" | \"gpt-4o-mini\"): Promise<{\n    canGenerate: boolean;\n    reason?: string;\n    remainingProGenerations: number;\n    remainingDraftGenerations: number;\n    planLimits: any;\n  }>;\n  resetUserGenerationCounts(userId: string): Promise<User | undefined>;\n\n  // Hook generation operations\n  createHookGeneration(generation: InsertHookGeneration): Promise<HookGeneration>;\n  getHookGenerationsByUser(userId: string): Promise<HookGeneration[]>;\n  getHookGeneration(id: string): Promise<HookGeneration | undefined>;\n\n  // Favorite hooks operations\n  createFavoriteHook(favorite: InsertFavoriteHook): Promise<FavoriteHook>;\n  getFavoriteHooksByUser(userId: string): Promise<FavoriteHook[]>;\n  deleteFavoriteHook(id: string): Promise<boolean>;\n\n  // Recent hooks for novelty checking\n  addRecentHook(recentHook: InsertUserRecentHook): Promise<UserRecentHook>;\n  getRecentHooksByUser(userId: string): Promise<UserRecentHook[]>;\n  cleanupOldRecentHooks(userId: string): Promise<void>;\n\n  // Stripe operations\n  updateStripeCustomerId(userId: string, customerId: string): Promise<User | null>;\n  updateUserStripeInfo(userId: string, stripeInfo: { stripeCustomerId: string; stripeSubscriptionId: string }): Promise<User | null>;\n  updateUserSubscriptionStatus(userId: string, status: { status: string; currentPeriodEnd: number; cancelAtPeriodEnd: boolean }): Promise<User | null>;\n  getUserByStripeCustomerId(customerId: string): Promise<User | null>;\n\n  // Optimized batch operations to reduce N+1 queries\n  getUsersWithGenerationsCount(userIds: string[]): Promise<Array<User & { generationsCount: number }>>;\n  getHookGenerationsWithUserData(userId: string, limit?: number): Promise<Array<HookGeneration & { user: User }>>;\n  getFavoriteHooksWithUserAndGenerationData(userId: string): Promise<Array<FavoriteHook & { user: User; generation?: HookGeneration }>>;\n  getPopularHooksAnalytics(dateFrom?: Date, dateTo?: Date): Promise<Array<{ platform: string; totalGenerations: number; avgScore: number }>>;\n  \n  // Health check\n  healthCheck(): Promise<boolean>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user || undefined;\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.email, email));\n    return user || undefined;\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.company, username));\n    return user || undefined;\n  }\n\n  async getUserByFirebaseUid(firebaseUid: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.firebaseUid, firebaseUid));\n    return user || undefined;\n  }\n\n  async createUser(userData: { email: string; password: string; firstName: string; lastName: string }): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(userData)\n      .returning();\n    return user;\n  }\n\n  async createUserFromFirebase(userData: { firebaseUid: string; email: string; firstName: string; lastName: string; emailVerified: boolean }): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values({\n        ...userData,\n        password: null, // Firebase users don't have passwords in our system\n      })\n      .returning();\n    return user;\n  }\n\n  async updateUser(id: string, updates: Partial<InsertUser>): Promise<User | undefined> {\n    const [user] = await db\n      .update(users)\n      .set({\n        ...updates,\n        bannedTerms: updates.bannedTerms ? updates.bannedTerms as string[] : undefined,\n        updatedAt: new Date(),\n      })\n      .where(eq(users.id, id))\n      .returning();\n    return user || undefined;\n  }\n\n  async upsertUser(userData: UpsertUser): Promise<User> {\n    // First try to find existing user by email or firebaseUid\n    let existingUser;\n    if (userData.email) {\n      existingUser = await this.getUserByEmail(userData.email);\n    }\n    if (!existingUser && userData.firebaseUid) {\n      existingUser = await this.getUserByFirebaseUid(userData.firebaseUid);\n    }\n\n    if (existingUser) {\n      // Update existing user\n      return this.updateUser(existingUser.id, userData);\n    } else {\n      // Create new user\n      const [user] = await db\n        .insert(users)\n        .values(userData)\n        .returning();\n      return user;\n    }\n  }\n\n  async incrementUserCredits(userId: string): Promise<User | undefined> {\n    const user = await this.getUser(userId);\n    if (!user) return undefined;\n    \n    const currentUsed = user.usedCredits || 0;\n    const newUsedCredits = currentUsed + 1;\n    \n    return this.updateUser(userId, { usedCredits: newUsedCredits });\n  }\n\n  async checkUserCanGenerate(userId: string): Promise<{ canGenerate: boolean; remainingCredits: number; isAtLimit: boolean }> {\n    const user = await this.getUser(userId);\n    if (!user) return { canGenerate: false, remainingCredits: 0, isAtLimit: true };\n    \n    if (user.isPremium) {\n      return { canGenerate: true, remainingCredits: 999, isAtLimit: false };\n    }\n    \n    const freeCredits = user.freeCredits || 5;\n    const usedCredits = user.usedCredits || 0;\n    const remainingCredits = Math.max(0, freeCredits - usedCredits);\n    const isAtLimit = remainingCredits === 0;\n    \n    return { \n      canGenerate: remainingCredits > 0, \n      remainingCredits, \n      isAtLimit \n    };\n  }\n\n\n\n  // New generation tracking system implementation\n  async incrementUserGenerations(userId: string, modelType: \"gpt-4o\" | \"gpt-4o-mini\"): Promise<User | undefined> {\n    const user = await this.getUser(userId);\n    if (!user) return undefined;\n\n    if (modelType === \"gpt-4o\") {\n      const currentUsed = user.proGenerationsUsed || 0;\n      return this.updateUser(userId, { proGenerationsUsed: currentUsed + 1 });\n    } else {\n      const currentUsed = user.draftGenerationsUsed || 0;\n      return this.updateUser(userId, { draftGenerationsUsed: currentUsed + 1 });\n    }\n  }\n\n  async checkUserCanGenerateWithModel(userId: string, modelType: \"gpt-4o\" | \"gpt-4o-mini\"): Promise<{\n    canGenerate: boolean;\n    reason?: string;\n    remainingProGenerations: number;\n    remainingDraftGenerations: number;\n    planLimits: any;\n  }> {\n    const user = await this.getUser(userId);\n    if (!user) {\n      return {\n        canGenerate: false,\n        reason: \"User not found\",\n        remainingProGenerations: 0,\n        remainingDraftGenerations: 0,\n        planLimits: null\n      };\n    }\n\n    const plan = user.subscriptionPlan || \"free\";\n    const { SUBSCRIPTION_PLANS } = await import(\"./services/stripe\");\n    const planKey = plan.toUpperCase() as keyof typeof SUBSCRIPTION_PLANS;\n    const planLimits = SUBSCRIPTION_PLANS[planKey]?.limits;\n\n    if (!planLimits) {\n      return {\n        canGenerate: false,\n        reason: \"Invalid subscription plan\",\n        remainingProGenerations: 0,\n        remainingDraftGenerations: 0,\n        planLimits: null\n      };\n    }\n\n    const proUsed = user.proGenerationsUsed || 0;\n    const draftUsed = user.draftGenerationsUsed || 0;\n\n    // Calculate remaining generations based on plan\n    let remainingProGenerations = 0;\n    let remainingDraftGenerations = 0;\n\n    if (plan === \"free\") {\n      // Free tier: 20 draft generations per week, no pro generations\n      const weeklyReset = new Date(user.weeklyDraftReset || user.createdAt || new Date());\n      const weeksSinceReset = Math.floor((Date.now() - weeklyReset.getTime()) / (7 * 24 * 60 * 60 * 1000));\n      \n      if (weeksSinceReset >= 1) {\n        // Reset weekly count\n        await this.updateUser(userId, { \n          draftGenerationsUsed: 0, \n          weeklyDraftReset: new Date() \n        });\n        remainingDraftGenerations = 20;\n      } else {\n        remainingDraftGenerations = Math.max(0, 20 - draftUsed);\n      }\n      \n      remainingProGenerations = 0;\n    } else {\n      // Paid plans\n      if (planLimits.proGenerationsPerMonth === -1) {\n        remainingProGenerations = 999; // Unlimited\n      } else {\n        remainingProGenerations = Math.max(0, planLimits.proGenerationsPerMonth - proUsed);\n      }\n\n      if (planLimits.draftGenerationsPerMonth === -1) {\n        remainingDraftGenerations = 999; // Unlimited\n      } else {\n        remainingDraftGenerations = Math.max(0, planLimits.draftGenerationsPerMonth - draftUsed);\n      }\n    }\n\n    // Check if user can generate with requested model\n    let canGenerate = false;\n    let reason: string | undefined;\n\n    if (modelType === \"gpt-4o\") {\n      if (plan === \"free\") {\n        canGenerate = false;\n        reason = \"Pro generations require a paid subscription\";\n      } else {\n        canGenerate = remainingProGenerations > 0;\n        if (!canGenerate) {\n          reason = `Pro generation limit reached (${planLimits.proGenerationsPerMonth}/month)`;\n        }\n      }\n    } else {\n      // gpt-4o-mini\n      if (plan === \"free\") {\n        canGenerate = remainingDraftGenerations > 0;\n        if (!canGenerate) {\n          reason = \"Weekly draft generation limit reached (20/week)\";\n        }\n      } else {\n        canGenerate = remainingDraftGenerations > 0;\n        if (!canGenerate) {\n          reason = \"Draft generation limit reached\";\n        }\n      }\n    }\n\n    return {\n      canGenerate,\n      reason,\n      remainingProGenerations,\n      remainingDraftGenerations,\n      planLimits\n    };\n  }\n\n  async resetUserGenerationCounts(userId: string): Promise<User | undefined> {\n    return this.updateUser(userId, { \n      proGenerationsUsed: 0, \n      draftGenerationsUsed: 0,\n      weeklyDraftReset: new Date()\n    });\n  }\n\n  async createHookGeneration(insertGeneration: InsertHookGeneration): Promise<HookGeneration> {\n    const [generation] = await db\n      .insert(hookGenerations)\n      .values({\n        ...insertGeneration,\n        hooks: insertGeneration.hooks as any,\n        topThreeVariants: insertGeneration.topThreeVariants as any\n      })\n      .returning();\n    return generation;\n  }\n\n  async getHookGenerationsByUser(userId: string): Promise<HookGeneration[]> {\n    return await db\n      .select()\n      .from(hookGenerations)\n      .where(eq(hookGenerations.userId, userId))\n      .orderBy(desc(hookGenerations.createdAt));\n  }\n\n  async getGenerationsByUserId(userId: string): Promise<HookGeneration[]> {\n    return this.getHookGenerationsByUser(userId);\n  }\n\n  async getGenerationById(id: string): Promise<HookGeneration | null> {\n    const [generation] = await db.select().from(hookGenerations).where(eq(hookGenerations.id, id));\n    return generation || null;\n  }\n\n  async deleteGeneration(id: string): Promise<boolean> {\n    const result = await db.delete(hookGenerations).where(eq(hookGenerations.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  async getHookGeneration(id: string): Promise<HookGeneration | undefined> {\n    const [generation] = await db.select().from(hookGenerations).where(eq(hookGenerations.id, id));\n    return generation || undefined;\n  }\n\n\n\n  async createFavoriteHook(insertFavorite: InsertFavoriteHook): Promise<FavoriteHook> {\n    const [favorite] = await db\n      .insert(favoriteHooks)\n      .values(insertFavorite)\n      .returning();\n    return favorite;\n  }\n\n  async getFavoriteHooksByUser(userId: string): Promise<FavoriteHook[]> {\n    return await db\n      .select()\n      .from(favoriteHooks)\n      .where(eq(favoriteHooks.userId, userId))\n      .orderBy(desc(favoriteHooks.createdAt));\n  }\n\n  async deleteFavoriteHook(id: string): Promise<boolean> {\n    try {\n      await db.delete(favoriteHooks).where(eq(favoriteHooks.id, id));\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  async addRecentHook(insertRecentHook: InsertUserRecentHook): Promise<UserRecentHook> {\n    // Add the new recent hook\n    const [recentHook] = await db\n      .insert(userRecentHooks)\n      .values(insertRecentHook)\n      .returning();\n    \n    // Clean up old hooks (keep only last 10)\n    await this.cleanupOldRecentHooks(insertRecentHook.userId!);\n    \n    return recentHook;\n  }\n\n  async getRecentHooksByUser(userId: string): Promise<UserRecentHook[]> {\n    return await db\n      .select()\n      .from(userRecentHooks)\n      .where(eq(userRecentHooks.userId, userId))\n      .orderBy(desc(userRecentHooks.createdAt))\n      .limit(10);\n  }\n\n  async cleanupOldRecentHooks(userId: string): Promise<void> {\n    // Get all recent hooks for user, ordered by creation date\n    const allRecentHooks = await db\n      .select()\n      .from(userRecentHooks)\n      .where(eq(userRecentHooks.userId, userId))\n      .orderBy(desc(userRecentHooks.createdAt));\n    \n    // If more than 10, delete the oldest ones\n    if (allRecentHooks.length > 10) {\n      const hooksToDelete = allRecentHooks.slice(10);\n      for (const hook of hooksToDelete) {\n        await db.delete(userRecentHooks).where(eq(userRecentHooks.id, hook.id));\n      }\n    }\n  }\n\n  async resetUserCredits(userId: string): Promise<User | undefined> {\n    const [user] = await db\n      .update(users)\n      .set({ \n        usedCredits: 0,\n        updatedAt: new Date(),\n      })\n      .where(eq(users.id, userId))\n      .returning();\n    return user || undefined;\n  }\n\n\n\n  async updateStripeCustomerId(userId: string, customerId: string): Promise<User | null> {\n    try {\n      const [updated] = await db\n        .update(users)\n        .set({ stripeCustomerId: customerId })\n        .where(eq(users.id, userId))\n        .returning();\n      return updated || null;\n    } catch (error) {\n      console.error(\"Error updating stripe customer ID:\", error);\n      throw error;\n    }\n  }\n\n  async updateUserStripeInfo(userId: string, stripeInfo: { stripeCustomerId: string; stripeSubscriptionId: string }): Promise<User | null> {\n    try {\n      const [updated] = await db\n        .update(users)\n        .set({ \n          stripeCustomerId: stripeInfo.stripeCustomerId,\n          stripeSubscriptionId: stripeInfo.stripeSubscriptionId,\n          isPremium: true \n        })\n        .where(eq(users.id, userId))\n        .returning();\n      return updated || null;\n    } catch (error) {\n      console.error(\"Error updating user stripe info:\", error);\n      throw error;\n    }\n  }\n\n  async updateUserSubscriptionStatus(userId: string, status: { status: string; currentPeriodEnd: number; cancelAtPeriodEnd: boolean }): Promise<User | null> {\n    try {\n      const [updated] = await db\n        .update(users)\n        .set({ \n          isPremium: status.status === 'active',\n          updatedAt: new Date(),\n        })\n        .where(eq(users.id, userId))\n        .returning();\n      return updated || null;\n    } catch (error) {\n      console.error(\"Error updating user subscription status:\", error);\n      throw error;\n    }\n  }\n\n  async getUserByStripeCustomerId(customerId: string): Promise<User | null> {\n    try {\n      const [user] = await db\n        .select()\n        .from(users)\n        .where(eq(users.stripeCustomerId, customerId))\n        .limit(1);\n      return user || null;\n    } catch (error) {\n      console.error(\"Error finding user by stripe customer ID:\", error);\n      throw error;\n    }\n  }\n\n  // Optimized batch operations to reduce N+1 queries\n  async getUsersWithGenerationsCount(userIds: string[]): Promise<Array<User & { generationsCount: number }>> {\n    if (userIds.length === 0) return [];\n    \n    const result = await db\n      .select({\n        id: users.id,\n        email: users.email,\n        firstName: users.firstName,\n        lastName: users.lastName,\n        company: users.company,\n        subscriptionPlan: users.subscriptionPlan,\n        subscriptionStatus: users.subscriptionStatus,\n        createdAt: users.createdAt,\n        generationsCount: sql<number>`COUNT(${hookGenerations.id})::int`.as('generations_count')\n      })\n      .from(users)\n      .leftJoin(hookGenerations, eq(users.id, hookGenerations.userId))\n      .where(inArray(users.id, userIds))\n      .groupBy(users.id)\n      .orderBy(desc(users.createdAt));\n\n    return result as Array<User & { generationsCount: number }>;\n  }\n\n  async getHookGenerationsWithUserData(userId: string, limit: number = 50): Promise<Array<HookGeneration & { user: User }>> {\n    const result = await db\n      .select({\n        // Hook generation fields\n        id: hookGenerations.id,\n        userId: hookGenerations.userId,\n        platform: hookGenerations.platform,\n        objective: hookGenerations.objective,\n        topic: hookGenerations.topic,\n        modelType: hookGenerations.modelType,\n        hooks: hookGenerations.hooks,\n        topThreeVariants: hookGenerations.topThreeVariants,\n        createdAt: hookGenerations.createdAt,\n        // User fields\n        user: {\n          id: users.id,\n          email: users.email,\n          firstName: users.firstName,\n          lastName: users.lastName,\n          company: users.company,\n          subscriptionPlan: users.subscriptionPlan,\n          subscriptionStatus: users.subscriptionStatus\n        }\n      })\n      .from(hookGenerations)\n      .innerJoin(users, eq(hookGenerations.userId, users.id))\n      .where(eq(hookGenerations.userId, userId))\n      .orderBy(desc(hookGenerations.createdAt))\n      .limit(limit);\n\n    return result as Array<HookGeneration & { user: User }>;\n  }\n\n  async getFavoriteHooksWithUserAndGenerationData(userId: string): Promise<Array<FavoriteHook & { user: User; generation?: HookGeneration }>> {\n    const result = await db\n      .select({\n        // Favorite hook fields\n        id: favoriteHooks.id,\n        userId: favoriteHooks.userId,\n        generationId: favoriteHooks.generationId,\n        hook: favoriteHooks.hook,\n        hookData: favoriteHooks.hookData,\n        framework: favoriteHooks.framework,\n        platformNotes: favoriteHooks.platformNotes,\n        topic: favoriteHooks.topic,\n        platform: favoriteHooks.platform,\n        createdAt: favoriteHooks.createdAt,\n        // User fields\n        user: {\n          id: users.id,\n          email: users.email,\n          firstName: users.firstName,\n          lastName: users.lastName,\n          company: users.company\n        },\n        // Generation fields (optional)\n        generation: {\n          id: hookGenerations.id,\n          platform: hookGenerations.platform,\n          topic: hookGenerations.topic,\n          modelType: hookGenerations.modelType,\n          createdAt: hookGenerations.createdAt\n        }\n      })\n      .from(favoriteHooks)\n      .innerJoin(users, eq(favoriteHooks.userId, users.id))\n      .leftJoin(hookGenerations, eq(favoriteHooks.generationId, hookGenerations.id))\n      .where(eq(favoriteHooks.userId, userId))\n      .orderBy(desc(favoriteHooks.createdAt));\n\n    return result as Array<FavoriteHook & { user: User; generation?: HookGeneration }>;\n  }\n\n  async getPopularHooksAnalytics(dateFrom?: Date, dateTo?: Date): Promise<Array<{ platform: string; totalGenerations: number; avgScore: number }>> {\n    let query = db\n      .select({\n        platform: hookGenerations.platform,\n        totalGenerations: sql<number>`COUNT(*)::int`.as('total_generations'),\n        avgScore: sql<number>`AVG((hooks::jsonb->0->>'score')::numeric)::float`.as('avg_score')\n      })\n      .from(hookGenerations);\n\n    if (dateFrom && dateTo) {\n      query = query.where(\n        and(\n          gte(hookGenerations.createdAt, dateFrom),\n          lte(hookGenerations.createdAt, dateTo)\n        )\n      );\n    }\n\n    const result = await query\n      .groupBy(hookGenerations.platform)\n      .orderBy(desc(sql`COUNT(*)`));\n\n    return result as Array<{ platform: string; totalGenerations: number; avgScore: number }>;\n  }\n\n  private lastHealthCheck: { result: boolean; timestamp: number } | null = null;\n  \n  async healthCheck(): Promise<boolean> {\n    // Cache health check result for 30 seconds to reduce database load\n    const now = Date.now();\n    if (this.lastHealthCheck && (now - this.lastHealthCheck.timestamp) < 30000) {\n      return this.lastHealthCheck.result;\n    }\n    \n    try {\n      // Simple query to test database connectivity\n      await db.select().from(users).limit(1);\n      this.lastHealthCheck = { result: true, timestamp: now };\n      return true;\n    } catch (error) {\n      console.error(\"Database health check failed:\", error);\n      this.lastHealthCheck = { result: false, timestamp: now };\n      throw error;\n    }\n  }\n}\n\nexport const storage = new DatabaseStorage();\n", "import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic } from \"./vite\";\nimport { productionSecurityHeaders, forceHTTPS } from \"./middleware/security-headers\";\nimport { validateEnvironment, isProduction, getEnv } from \"./config/env-validation\";\nimport { logger } from \"./config/logger\";\nimport { pool } from \"./db\";\nimport history from \"connect-history-api-fallback\";\n\n// Validate environment variables before starting server\nvalidateEnvironment();\n\nconst app = express();\n\n// Health check routes MUST come before HTTPS redirect to prevent redirect loops\n// These endpoints are used by Railway for health checks and must be accessible via HTTP\napp.get('/health', async (req, res) => {\n  const startTime = Date.now();\n  const env = getEnv();\n  \n  const healthCheck = {\n    status: 'healthy',\n    timestamp: new Date().toISOString(),\n    environment: env.NODE_ENV,\n    uptime: process.uptime(),\n    version: process.env.npm_package_version || '1.0.0',\n    services: {\n      database: 'unknown',\n      firebase: env.FIREBASE_PROJECT_ID ? 'configured' : 'not_configured',\n      stripe: env.STRIPE_SECRET_KEY ? 'configured' : 'not_configured',\n      openai: env.OPENAI_API_KEY ? 'configured' : 'not_configured',\n      analytics: env.ANALYTICS_ENABLED ? 'enabled' : 'disabled',\n      abTesting: env.AB_TESTING_ENABLED ? 'enabled' : 'disabled'\n    },\n    conversion: {\n      tracking: env.CONVERSION_TRACKING_ENABLED,\n      privacy: {\n        gdpr: env.GDPR_COMPLIANCE_ENABLED,\n        ccpa: env.CCPA_COMPLIANCE_ENABLED,\n        anonymizeIps: env.ANONYMIZE_IPS\n      },\n      performance: {\n        monitoring: env.ENABLE_PERFORMANCE_MONITORING,\n        threshold: `${env.PERFORMANCE_THRESHOLD_P95}ms`,\n        errorThreshold: `${(env.ERROR_RATE_THRESHOLD * 100).toFixed(1)}%`\n      }\n    },\n    checks: {\n      memory: {\n        used: Math.round(process.memoryUsage().heapUsed / 1024 / 1024),\n        free: Math.round(process.memoryUsage().heapTotal / 1024 / 1024),\n        total: Math.round(process.memoryUsage().rss / 1024 / 1024)\n      }\n    }\n  };\n\n  try {\n    // Enhanced database health check with better error handling\n    const { testDatabaseConnection } = await import('./db');\n    \n    // Test database connectivity with proper timeout\n    const dbTest = await testDatabaseConnection(10000);\n    \n    if (dbTest.success) {\n      healthCheck.services.database = 'connected';\n      healthCheck.services.databaseDetails = dbTest.connectionInfo;\n    } else {\n      throw new Error(dbTest.error || 'Unknown database error');\n    }\n    \n    // Check if conversion tracking tables exist with better error handling\n    try {\n      const { pool } = await import('./db');\n      const conversionTablesCheck = pool.query(`\n        SELECT table_name \n        FROM information_schema.tables \n        WHERE table_schema = 'public' \n        AND table_name IN ('analytics_events', 'ab_tests', 'conversion_funnels', 'user_consent')\n      `);\n      const conversionTablesResult = await Promise.race([\n        conversionTablesCheck,\n        new Promise((_, reject) => setTimeout(() => reject(new Error('Conversion tables check timeout')), 5000))\n      ]);\n      \n      const tableNames = conversionTablesResult.rows.map(row => row.table_name);\n      healthCheck.conversion = {\n        ...healthCheck.conversion,\n        tablesReady: conversionTablesResult.rows.length === 4,\n        tablesFound: tableNames,\n        tableCount: conversionTablesResult.rows.length\n      };\n    } catch (error) {\n      logger.warn('Conversion tables check failed:', error);\n      healthCheck.conversion = {\n        ...healthCheck.conversion,\n        tablesReady: false,\n        error: error instanceof Error ? error.message : String(error)\n      };\n    }\n    \n  } catch (error) {\n    logger.error('Health check database error:', error);\n    healthCheck.services.database = 'disconnected';\n    healthCheck.services.databaseError = error.message;\n    healthCheck.status = 'unhealthy';\n    \n    // Return 503 for database connection failures in production\n    // This allows Railway to detect the issue and potentially restart\n    const responseTime = Date.now() - startTime;\n    healthCheck.checks = {\n      ...healthCheck.checks,\n      responseTime: `${responseTime}ms`\n    };\n    \n    if (isProduction()) {\n      return res.status(503).json(healthCheck);\n    }\n  }\n\n  const responseTime = Date.now() - startTime;\n  healthCheck.checks = {\n    ...healthCheck.checks,\n    responseTime: `${responseTime}ms`\n  };\n\n  // Always return 200 for Railway health checks to prevent restart loops\n  res.status(200).json(healthCheck);\n});\n\n// Readiness probe for Railway\napp.get('/ready', (req, res) => {\n  res.status(200).json({\n    status: 'ready',\n    timestamp: new Date().toISOString(),\n    uptime: process.uptime()\n  });\n});\n\n// Liveness probe for Railway - simple endpoint that always responds\napp.get('/live', (req, res) => {\n  res.status(200).json({\n    status: 'alive',\n    timestamp: new Date().toISOString(),\n    uptime: process.uptime(),\n    environment: process.env.NODE_ENV || 'development',\n    railway: process.env.RAILWAY_ENVIRONMENT || 'local'\n  });\n});\n\n// Production security middleware (applied AFTER health checks)\napp.use(forceHTTPS);\napp.use(productionSecurityHeaders);\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// Enhanced logging middleware for production monitoring\napp.use((req, res, next) => {\n  if (!getEnv().ENABLE_REQUEST_LOGGING) {\n    return next();\n  }\n\n  const start = Date.now();\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    \n    // Log API calls and errors\n    if (req.path.startsWith(\"/api\") || res.statusCode >= 400) {\n      logger.logRequest(req, res, duration);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  try {\n    logger.info('Starting application server...');\n    \n    // Initialize database connection with retry logic for Railway\n    if (isProduction()) {\n      logger.info('Initializing database connection for production...');\n      try {\n        const { initializeDatabase } = await import('./db');\n        await initializeDatabase();\n        logger.info('\u2705 Database connection initialized successfully');\n      } catch (error) {\n        logger.error('\u274C Failed to initialize database connection:', error);\n        // Don't exit immediately in production, let health checks handle it\n        logger.warn('\u26A0\uFE0F Continuing startup despite database connection failure - health checks will monitor connectivity');\n      }\n    }\n    \n    const server = await registerRoutes(app);\n\n    app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n      const status = err.status || err.statusCode || 500;\n      const message = err.message || \"Internal Server Error\";\n      \n      logger.error(`HTTP Error ${status}`, err);\n      res.status(status).json({ message });\n    });\n\n    // importantly only setup vite in development and after\n    // setting up all the other routes so the catch-all route\n    // doesn't interfere with the other routes\n    if (app.get(\"env\") === \"development\") {\n      await setupVite(app, server);\n    } else {\n      // SPA fallback for production - returns index.html for unknown routes\n      app.use(history({ \n        disableDotRule: true, \n        htmlAcceptHeaders: [\"text/html\", \"application/xhtml+xml\"] \n      }));\n      serveStatic(app);\n    }\n\n    // ALWAYS serve the app on the port specified in the environment variable PORT\n    // Other ports are firewalled. Default to 5000 if not specified.\n    // this serves both the API and the client.\n    // It is the only port that is not firewalled.\n    const env = getEnv();\n    const port = env.PORT;\n    \n    // Railway environment detected - no startup delay needed as health checks handle readiness\n    \n    const httpServer = server.listen({\n      port,\n      host: \"0.0.0.0\",\n      reusePort: true,\n    }, () => {\n      logger.info(`Server started`, {\n        port,\n        environment: env.NODE_ENV,\n        railway: env.RAILWAY_ENVIRONMENT || \"local\",\n        healthCheck: \"/live\",\n        readinessCheck: \"/ready\"\n      });\n    });\n\n    // Graceful shutdown handling for production and Railway deployments\n    const gracefulShutdown = (signal: string) => {\n      logger.warn(`Received ${signal}. Starting graceful shutdown...`);\n      \n      httpServer.close((err) => {\n        if (err) {\n          logger.error(\"Error during server shutdown\", err);\n          process.exit(1);\n        }\n        \n        logger.info(\"Server closed successfully\");\n        \n        // Close database connections\n        if (typeof pool?.end === 'function') {\n          pool.end().then(() => {\n            logger.info(\"Database connections closed\");\n            process.exit(0);\n          }).catch((error) => {\n            logger.error(\"Error closing database connections\", error);\n            process.exit(1);\n          });\n        } else {\n          process.exit(0);\n        }\n      });\n\n      // Railway gives us 30 seconds for graceful shutdown, so force shutdown after 25 seconds\n      const shutdownTimeout = env.RAILWAY_ENVIRONMENT ? 25000 : 30000;\n      setTimeout(() => {\n        logger.error(`Forced shutdown after ${shutdownTimeout / 1000} seconds`);\n        process.exit(1);\n      }, shutdownTimeout);\n    };\n\n    // Listen for shutdown signals\n    process.on(\"SIGTERM\", () => gracefulShutdown(\"SIGTERM\"));\n    process.on(\"SIGINT\", () => gracefulShutdown(\"SIGINT\"));\n\n    // Handle uncaught exceptions in production\n    if (isProduction()) {\n      process.on(\"uncaughtException\", (error) => {\n        logger.error(\"Uncaught Exception\", error);\n        gracefulShutdown(\"UNCAUGHT_EXCEPTION\");\n      });\n\n      process.on(\"unhandledRejection\", (reason, promise) => {\n        logger.error(\"Unhandled Rejection\", reason instanceof Error ? reason : new Error(String(reason)), {\n          promise: String(promise)\n        });\n        gracefulShutdown(\"UNHANDLED_REJECTION\");\n      });\n    }\n\n  } catch (error) {\n    logger.error(\"Failed to start server\", error instanceof Error ? error : new Error(String(error)));\n    process.exit(1);\n  }\n})();\n", "import type { Express } from \"express\";\nimport express from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertUserSchema, insertHookGenerationSchema, insertFavoriteHookSchema, registerSchema, loginSchema } from \"@shared/schema\";\nimport { generateTriModalHooks as generateHooks } from \"./services/openai-trimodal\";\nimport { firebaseAuthMiddleware, FirebaseRequest } from \"./firebase-auth\";\nimport { \n  apiLimiter, \n  generateHooksLimiter, \n  sanitizeInput, \n  securityHeaders, \n  validateRequestSize \n} from \"./middleware/security\";\nimport { \n  createSubscription, \n  createBillingPortalSession, \n  getSubscriptionStatus,\n  cancelSubscription,\n  handleStripeWebhook,\n  SUBSCRIPTION_PLANS\n} from \"./services/stripe\";\nimport Stripe from \"stripe\";\nimport { adminAuth } from \"./firebase-admin\";\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n  apiVersion: \"2025-06-30.basil\",\n});\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Trust proxy for Replit environment (fixes X-Forwarded-For header warnings)\n  app.set('trust proxy', 1);\n  \n  // Security middleware\n  app.use(securityHeaders);\n  app.use(validateRequestSize);\n  app.use(sanitizeInput);\n  \n  // Rate limiting for API routes\n  app.use('/api/', apiLimiter);\n  \n  // Health check routes are now defined in index.ts before security middleware\n  \n  // Firebase Auth middleware will be applied to specific routes that need it\n\n  // Server-side Firebase auth endpoints (to bypass client CORS issues)\n  app.post(\"/api/auth/register\", async (req, res) => {\n    try {\n      // Validate input using Zod schema\n      const validationResult = registerSchema.safeParse(req.body);\n      if (!validationResult.success) {\n        return res.status(400).json({ \n          message: \"Invalid input data\",\n          errors: validationResult.error.issues.map(issue => ({\n            field: issue.path.join('.'),\n            message: issue.message\n          }))\n        });\n      }\n\n      const { email, password, firstName, lastName } = validationResult.data;\n\n      // Use Firebase Admin SDK to create user\n      \n      try {\n        const userRecord = await adminAuth!.createUser({\n          email,\n          password,\n          displayName: `${firstName} ${lastName}`,\n          emailVerified: process.env.NODE_ENV === 'development' // Only auto-verify in development\n        });\n\n        // Generate a custom token for immediate login\n        const customToken = await adminAuth!.createCustomToken(userRecord.uid);\n        \n        // Store user in our database\n        const userData = {\n          id: userRecord.uid,\n          email: userRecord.email || email, // Ensure email is not undefined\n          firstName,\n          lastName,\n          company: \"\",\n          industry: \"\",\n          role: \"\",\n          audience: \"\",\n          voice: \"\",\n          bannedTerms: [],\n          safetyPreferences: {\n            avoidControversy: true,\n            familyFriendly: true,\n            brandSafe: true\n          },\n          freeCredits: 5,\n          usedCredits: 0,\n          isPremium: false,\n          subscriptionStatus: 'free' as const,\n          subscriptionPlan: null,\n          currentPeriodEnd: null,\n          cancelAtPeriodEnd: false,\n          stripeCustomerId: null,\n          stripeSubscriptionId: null\n        };\n        \n        try {\n          await storage.upsertUser(userData);\n        } catch (dbError: any) {\n          console.log('Database user creation error (possibly duplicate):', dbError.message);\n          // Continue with registration even if user already exists in DB\n        }\n        \n        res.json({\n          success: true,\n          customToken,\n          user: {\n            uid: userRecord.uid,\n            email: userRecord.email,\n            displayName: userRecord.displayName,\n            emailVerified: userRecord.emailVerified\n          }\n        });\n        \n      } catch (firebaseError: any) {\n        console.error('Firebase Admin registration error:', firebaseError);\n        \n        if (firebaseError.code === 'auth/email-already-exists') {\n          return res.status(400).json({ \n            message: \"An account with this email already exists\" \n          });\n        }\n        \n        return res.status(400).json({ \n          message: \"Registration failed: \" + firebaseError.message \n        });\n      }\n      \n    } catch (error: any) {\n      console.error('Registration error:', error);\n      res.status(500).json({ \n        message: \"Internal server error during registration\" \n      });\n    }\n  });\n\n  app.post(\"/api/auth/login\", async (req, res) => {\n    try {\n      // Validate input using Zod schema\n      const validationResult = loginSchema.safeParse(req.body);\n      if (!validationResult.success) {\n        return res.status(400).json({ \n          message: \"Invalid input data\",\n          errors: validationResult.error.issues.map(issue => ({\n            field: issue.path.join('.'),\n            message: issue.message\n          }))\n        });\n      }\n\n      const { email, password } = validationResult.data;\n\n      // For Firebase authentication, we need to validate the password on the client side\n      // The server cannot directly validate passwords with Firebase Admin SDK\n      // Instead, we'll use a workaround: let the client handle authentication\n      // and just verify the user exists\n      \n      try {\n        const userRecord = await adminAuth!.getUserByEmail(email);\n        \n        // Generate a custom token for login (client will use this after password validation)\n        const customToken = await adminAuth!.createCustomToken(userRecord.uid);\n        \n        res.json({\n          success: true,\n          customToken,\n          user: {\n            uid: userRecord.uid,\n            email: userRecord.email,\n            displayName: userRecord.displayName,\n            emailVerified: userRecord.emailVerified\n          }\n        });\n        \n      } catch (firebaseError: any) {\n        console.error('Firebase Admin login error:', firebaseError);\n        \n        if (firebaseError.code === 'auth/user-not-found') {\n          return res.status(401).json({ \n            message: \"Invalid email or password\" \n          });\n        }\n        \n        return res.status(401).json({ \n          message: \"Login failed: \" + firebaseError.message \n        });\n      }\n      \n    } catch (error: any) {\n      console.error('Login error:', error);\n      res.status(500).json({ \n        message: \"Internal server error during login\" \n      });\n    }\n  });\n\n  // Firebase sync endpoint for client-side auth state\n  app.post(\"/api/auth/firebase-sync\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      // Get user data from verified Firebase token (middleware sets this)\n      const firebaseUser = req.firebaseUser;\n      \n      if (!firebaseUser || !firebaseUser.uid || !firebaseUser.email) {\n        return res.status(401).json({ \n          message: \"Invalid Firebase authentication\" \n        });\n      }\n\n      // Check if user already exists\n      let user = await storage.getUser(firebaseUser.uid);\n      let isNewUser = false;\n      \n      if (!user) {\n        // Create new user if doesn't exist\n        isNewUser = true;\n        const userData = {\n          id: firebaseUser.uid,\n          email: firebaseUser.email,\n          firstName: firebaseUser.name?.split(' ')[0] || '',\n          lastName: firebaseUser.name?.split(' ').slice(1).join(' ') || '',\n          company: \"\",\n          industry: \"\",\n          role: \"\",\n          audience: \"\",\n          voice: \"\",\n          bannedTerms: [],\n          safetyPreferences: {\n            avoidControversy: true,\n            familyFriendly: true,\n            brandSafe: true\n          },\n          freeCredits: 5,\n          usedCredits: 0,\n          isPremium: false,\n          subscriptionStatus: 'free' as const,\n          subscriptionPlan: null,\n          currentPeriodEnd: null,\n          cancelAtPeriodEnd: false,\n          stripeCustomerId: null,\n          stripeSubscriptionId: null\n        };\n        \n        user = await storage.upsertUser(userData);\n      } else {\n        // For existing users, always fetch fresh data from database to ensure we have latest profile updates\n        user = await storage.getUser(firebaseUser.uid);\n      }\n      \n      // Ensure user exists at this point\n      if (!user) {\n        throw new Error(\"Failed to create or retrieve user\");\n      }\n      \n      // Check if user needs onboarding (missing profile info)\n      // All these fields must be non-empty strings for onboarding to be complete\n      const needsOnboarding = !user.company?.trim() || !user.industry?.trim() || !user.role?.trim() || !user.audience?.trim() || !user.voice?.trim();\n      \n      console.log('Firebase sync check:', {\n        userId: firebaseUser.uid,\n        company: user.company,\n        industry: user.industry,\n        role: user.role,\n        audience: user.audience,\n        voice: user.voice,\n        needsOnboarding\n      });\n      \n      res.json({\n        success: true,\n        user,\n        isNewUser,\n        needsOnboarding\n      });\n      \n    } catch (error: any) {\n      console.error('Firebase sync error:', error);\n      res.status(500).json({ \n        message: \"Failed to sync user data\" \n      });\n    }\n  });\n\n  // Protected User profile routes\n  app.post(\"/api/users\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.firebaseUser?.uid;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      \n      console.log(\"Creating/updating user profile for:\", userId);\n      \n      // Create a complete user data object including the email from the authenticated user\n      const profileData = {\n        ...req.body,\n        email: req.user?.email || req.firebaseUser?.email || '', // Ensure email is included from authenticated user\n        id: userId // Ensure id is included\n      };\n      \n      const userData = insertUserSchema.parse(profileData);\n      const user = await storage.updateUser(userId, userData);\n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n      res.json(user);\n    } catch (error) {\n      console.error(\"Error creating/updating user:\", error);\n      res.status(400).json({ message: \"Invalid user data\", error: error instanceof Error ? error.message : \"Unknown error\" });\n    }\n  });\n\n  app.get(\"/api/users/me\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.firebaseUser?.uid;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      \n      const user = await storage.getUser(userId);\n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n      res.json(user);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch user\", error: error instanceof Error ? error.message : \"Unknown error\" });\n    }\n  });\n\n  app.put(\"/api/users/me\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.firebaseUser?.uid;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      \n      const updates = insertUserSchema.partial().parse(req.body);\n      const user = await storage.updateUser(userId, updates);\n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n      res.json(user);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid user data\", error: error instanceof Error ? error.message : \"Unknown error\" });\n    }\n  });\n\n  // Check credits endpoint (legacy)\n  app.get(\"/api/credits/check\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.user?.id;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      const creditStatus = await storage.checkUserCanGenerate(userId);\n      res.json(creditStatus);\n    } catch (error: any) {\n      console.error(\"Error checking credits:\", error);\n      res.status(500).json({ error: \"Failed to check credits\" });\n    }\n  });\n\n  // New generation status endpoint\n  app.get(\"/api/generations/status\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.user?.id;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      \n      const modelType = req.query.modelType as \"gpt-4o\" | \"gpt-4o-mini\" || \"gpt-4o\";\n      const generationStatus = await storage.checkUserCanGenerateWithModel(userId, modelType);\n      res.json(generationStatus);\n    } catch (error: any) {\n      console.error(\"Error checking generation status:\", error);\n      res.status(500).json({ error: \"Failed to check generation status\" });\n    }\n  });\n\n  // Protected Hook generation routes with strict rate limiting\n  app.post(\"/api/generate-hooks\", generateHooksLimiter, firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.user?.id;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      let { platform, objective, topic, modelType } = req.body;\n      \n      if (!platform || !objective || !topic) {\n        return res.status(400).json({ message: \"Missing required fields: platform, objective, topic\" });\n      }\n\n      // Get user profile first to determine appropriate model\n      const user = await storage.getUser(userId);\n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n\n      // Determine model type based on subscription plan if not explicitly provided\n      if (!modelType) {\n        const plan = user.subscriptionPlan || \"free\";\n        if (plan === \"free\") {\n          modelType = \"gpt-4o-mini\"; // Free users always get mini model\n        } else {\n          // Paid users can choose, but default to full model\n          modelType = \"gpt-4o\";\n        }\n      }\n\n      // Validate model type\n      if (![\"gpt-4o\", \"gpt-4o-mini\"].includes(modelType)) {\n        return res.status(400).json({ message: \"Invalid model type. Must be 'gpt-4o' or 'gpt-4o-mini'\" });\n      }\n\n      // For free users, enforce mini model only\n      if ((user.subscriptionPlan || \"free\") === \"free\" && modelType === \"gpt-4o\") {\n        modelType = \"gpt-4o-mini\";\n        console.log(\"Free user attempted to use gpt-4o, automatically switched to gpt-4o-mini\");\n      }\n\n      console.log(`Final model selection: ${modelType} for user plan: ${user.subscriptionPlan || \"free\"}`);\n\n      // Check if user can generate hooks with the requested model type\n      const generationStatus = await storage.checkUserCanGenerateWithModel(userId, modelType);\n      if (!generationStatus.canGenerate) {\n        return res.status(403).json({ \n          error: generationStatus.reason || \"Generation limit reached\",\n          remainingProGenerations: generationStatus.remainingProGenerations,\n          remainingDraftGenerations: generationStatus.remainingDraftGenerations,\n          isAtLimit: true\n        });\n      }\n\n      // User profile already retrieved above for model determination\n\n      // Generate tri-modal hooks using enhanced OpenAI system\n      console.log(`Generating tri-modal hooks for ${platform} with topic: \"${topic}\"`);\n      console.log(`User profile: ${user.company} (${user.industry}, ${user.role})`);\n      console.log(`Audience: ${user.audience?.substring(0, 100)}...`);\n      \n      const result = await generateHooks({\n        topic,\n        platform,\n        objective,\n        modelType, // Pass the determined model type to the AI service\n        company: user.company || \"Unknown Company\",\n        role: user.role || \"Creator\",\n        industry: user.industry || \"General\",\n        audience: user.audience || \"General Audience\",\n        voice: user.voice || \"Friendly\",\n        bannedTerms: user.bannedTerms || [],\n        safety: \"standard\"\n      });\n\n      // Save generation to storage\n      const generation = await storage.createHookGeneration({\n        userId,\n        platform,\n        objective,\n        topic,\n        modelType,\n        hooks: result.hooks,\n        topThreeVariants: result.topThreeVariants\n      });\n\n      // Increment user's generation count for the specific model type\n      await storage.incrementUserGenerations(userId, modelType);\n\n      res.json(generation);\n    } catch (error) {\n      console.error(\"Hook generation error:\", error);\n      res.status(500).json({ message: \"Failed to generate hooks\", error: error instanceof Error ? error.message : \"Unknown error\" });\n    }\n  });\n\n  app.get(\"/api/generations\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.user?.id;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      const generations = await storage.getHookGenerationsByUser(userId);\n      res.json(generations);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch generations\", error: error instanceof Error ? error.message : \"Unknown error\" });\n    }\n  });\n\n  app.get(\"/api/generation/:id\", async (req, res) => {\n    try {\n      const generation = await storage.getHookGeneration(req.params.id);\n      if (!generation) {\n        return res.status(404).json({ message: \"Generation not found\" });\n      }\n      res.json(generation);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch generation\", error: error instanceof Error ? error.message : \"Unknown error\" });\n    }\n  });\n\n  // Protected Favorite hooks routes\n  app.post(\"/api/favorites\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.user?.id;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      console.log('Received favorite data:', req.body);\n      const favoriteData = insertFavoriteHookSchema.parse({\n        ...req.body,\n        userId\n      });\n      console.log('Parsed favorite data:', favoriteData);\n      const favorite = await storage.createFavoriteHook(favoriteData);\n      \n      // Track recent hook for novelty checking\n      if (favoriteData.hook) {\n        await storage.addRecentHook({\n          userId,\n          hook: favoriteData.hook\n        });\n      }\n      \n      res.json(favorite);\n    } catch (error) {\n      console.error('Favorite creation error:', error);\n      res.status(400).json({ message: \"Invalid favorite data\", error: error instanceof Error ? error.message : \"Unknown error\" });\n    }\n  });\n\n  app.get(\"/api/favorites\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.user?.id;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      const favorites = await storage.getFavoriteHooksByUser(userId);\n      res.json(favorites);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch favorites\", error: error instanceof Error ? error.message : \"Unknown error\" });\n    }\n  });\n\n  app.delete(\"/api/favorites/:id\", firebaseAuthMiddleware, async (req, res) => {\n    try {\n      const deleted = await storage.deleteFavoriteHook(req.params.id);\n      if (!deleted) {\n        return res.status(404).json({ message: \"Favorite not found\" });\n      }\n      res.json({ message: \"Favorite deleted successfully\" });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to delete favorite\", error: error instanceof Error ? error.message : \"Unknown error\" });\n    }\n  });\n\n  // Protected Export to CSV route\n  app.post(\"/api/export-csv\", firebaseAuthMiddleware, async (req, res) => {\n    try {\n      const { generationId } = req.body;\n      \n      if (!generationId) {\n        return res.status(400).json({ message: \"Generation ID is required\" });\n      }\n\n      const generation = await storage.getHookGeneration(generationId);\n      if (!generation) {\n        return res.status(404).json({ message: \"Generation not found\" });\n      }\n\n      // Create CSV content\n      const headers = \"Hook,Framework,Rationale,Platform Notes,Score,Word Count\\n\";\n      const rows = generation.hooks.map(hook => \n        `\"${hook.verbalHook}\",\"${hook.framework}\",\"${hook.rationale}\",\"${hook.platformNotes}\",${hook.score},${hook.wordCount}`\n      ).join(\"\\n\");\n      \n      const csv = headers + rows;\n\n      res.setHeader('Content-Type', 'text/csv');\n      res.setHeader('Content-Disposition', `attachment; filename=\"hooks-${generation.platform}-${Date.now()}.csv\"`);\n      res.send(csv);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to export CSV\", error: error instanceof Error ? error.message : \"Unknown error\" });\n    }\n  });\n\n  // Delete a generation\n  app.delete(\"/api/generations/:generationId\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const { generationId } = req.params;\n      const userId = req.user?.id;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      \n      // Verify the generation belongs to the user\n      const generation = await storage.getGenerationById(generationId);\n      if (!generation || generation.userId !== userId) {\n        return res.status(404).json({ message: \"Generation not found\" });\n      }\n\n      await storage.deleteGeneration(generationId);\n      res.json({ message: \"Generation deleted successfully\" });\n    } catch (error: any) {\n      console.error(\"Error deleting generation:\", error);\n      res.status(500).json({ message: \"Failed to delete generation\" });\n    }\n  });\n\n  // Stripe Payment Routes\n  \n  // Get subscription plans\n  app.get(\"/api/stripe/plans\", (req, res) => {\n    res.json({\n      plans: SUBSCRIPTION_PLANS\n    });\n  });\n\n  // Create subscription for Pro or Teams plan\n  app.post(\"/api/stripe/create-subscription\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.user?.id;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      const user = await storage.getUser(userId);\n      \n      if (!user?.email) {\n        return res.status(400).json({ message: \"User email not found\" });\n      }\n\n      const { plan, promotionCode } = req.body;\n      \n      // Validate plan\n      if (!plan || !['starter', 'creator', 'pro', 'teams'].includes(plan.toLowerCase())) {\n        return res.status(400).json({ message: \"Invalid plan. Must be 'starter', 'creator', 'pro', or 'teams'\" });\n      }\n\n      const planKey = plan.toUpperCase() as 'STARTER' | 'CREATOR' | 'PRO' | 'TEAMS';\n      const priceId = SUBSCRIPTION_PLANS[planKey].priceId;\n      \n      if (!priceId) {\n        return res.status(400).json({ message: \"Price ID not configured for this plan\" });\n      }\n      \n      const subscription = await createSubscription(\n        userId,\n        user.email,\n        priceId,\n        promotionCode\n      );\n\n      // Update user's plan in database\n      await storage.updateUser(userId, {\n        subscriptionPlan: plan.toLowerCase(),\n        subscriptionStatus: 'trialing'\n      });\n\n      res.json(subscription);\n    } catch (error) {\n      console.error(\"Error creating subscription:\", error);\n      res.status(500).json({ \n        message: \"Failed to create subscription\", \n        error: error instanceof Error ? error.message : \"Unknown error\" \n      });\n    }\n  });\n\n  // Get existing subscription\n  app.get(\"/api/stripe/subscription\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.user?.id;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      const user = await storage.getUser(userId);\n      \n      if (!user?.stripeSubscriptionId) {\n        return res.status(404).json({ message: \"No subscription found\" });\n      }\n\n      const subscription = await getSubscriptionStatus(user.stripeSubscriptionId);\n      res.json(subscription);\n    } catch (error) {\n      console.error(\"Error fetching subscription:\", error);\n      res.status(500).json({ \n        message: \"Failed to fetch subscription\", \n        error: error instanceof Error ? error.message : \"Unknown error\" \n      });\n    }\n  });\n\n  // Create customer portal session\n  app.post(\"/api/stripe/portal\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.user?.id;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      const user = await storage.getUser(userId);\n      const { returnUrl } = req.body;\n      \n      if (!user?.stripeCustomerId) {\n        return res.status(400).json({ message: \"No Stripe customer found\" });\n      }\n      \n      const portalUrl = await createBillingPortalSession(\n        user.stripeCustomerId, \n        returnUrl || `${req.protocol}://${req.get('host')}/app`\n      );\n\n      res.json({ url: portalUrl });\n    } catch (error) {\n      console.error(\"Error creating portal session:\", error);\n      res.status(500).json({ \n        message: \"Failed to create portal session\", \n        error: error instanceof Error ? error.message : \"Unknown error\" \n      });\n    }\n  });\n\n  // Cancel subscription\n  app.post(\"/api/stripe/cancel\", firebaseAuthMiddleware, async (req: FirebaseRequest, res) => {\n    try {\n      const userId = req.user?.id;\n      if (!userId) {\n        return res.status(401).json({ message: \"Authentication required\" });\n      }\n      const user = await storage.getUser(userId);\n      \n      if (!user?.stripeSubscriptionId) {\n        return res.status(404).json({ message: \"No active subscription found\" });\n      }\n      \n      await cancelSubscription(user.stripeSubscriptionId);\n      \n      // Update user's plan to cancel at period end\n      await storage.updateUser(userId, {\n        cancelAtPeriodEnd: true\n      });\n      res.json({ message: \"Subscription will be canceled at the end of the billing period\" });\n    } catch (error) {\n      console.error(\"Error cancelling subscription:\", error);\n      res.status(500).json({ \n        message: \"Failed to cancel subscription\", \n        error: error instanceof Error ? error.message : \"Unknown error\" \n      });\n    }\n  });\n\n  // Stripe webhook endpoint (no auth required)\n  app.post(\"/api/stripe/webhook\", express.raw({ type: 'application/json' }), async (req, res) => {\n    const sig = req.headers['stripe-signature'];\n    const webhookSecret = process.env.STRIPE_WEBHOOK_SECRET;\n\n    if (!webhookSecret) {\n      console.error(\"Stripe webhook secret not configured\");\n      return res.status(500).json({ error: \"Server configuration error\" });\n    }\n\n    try {\n      const event = stripe.webhooks.constructEvent(req.body, sig as string, webhookSecret);\n      await handleStripeWebhook(event);\n      res.json({ received: true });\n    } catch (error) {\n      console.error(\"Webhook signature verification failed:\", error);\n      // Don't expose internal error details in production\n      if (process.env.NODE_ENV === 'production') {\n        res.status(400).json({ error: \"Invalid webhook signature\" });\n      } else {\n        res.status(400).json({ \n          error: \"Webhook Error\", \n          details: error instanceof Error ? error.message : 'Unknown error' \n        });\n      }\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n", "import OpenAI from \"openai\";\n\n// the newest OpenAI model is \"gpt-4o\" which was released May 13, 2024. do not change this unless explicitly requested by the user\n// Ensure API key is properly configured - fail fast if missing\nif (!process.env.OPENAI_API_KEY && !process.env.API_KEY) {\n  throw new Error('OPENAI_API_KEY or API_KEY environment variable is required');\n}\n\nconst openai = new OpenAI({ \n  apiKey: process.env.OPENAI_API_KEY || process.env.API_KEY\n});\n\n// Hook Taxonomy Database from Strategic Research - Enhanced with Examples\nconst HOOK_TAXONOMY = {\n  \"Question-Based\": {\n    \"QH-01\": { \n      formula: \"Direct Question\", \n      driver: \"Curiosity Gap / Engagement\", \n      template: \"Did you know that {surprising_fact}?\", \n      risk: \"low\",\n      examples: [\"Did you know that squats can fix back pain?\", \"Did you know perfect form takes 30 seconds?\"]\n    },\n    \"QH-02\": { \n      formula: \"Rhetorical Question\", \n      driver: \"Pain Point / Empathy\", \n      template: \"Does your {area_of_life} feel {negative_adjective}?\", \n      risk: \"low\",\n      examples: [\"Does your squat feel unstable?\", \"Are your workouts feeling ineffective?\"]\n    },\n    \"QH-03\": { \n      formula: \"Hypothetical 'What If'\", \n      driver: \"Imagination / Desire\", \n      template: \"What if {ideal_scenario}?\", \n      risk: \"medium\",\n      examples: [\"What if perfect form was actually easier?\", \"What if one cue fixed everything?\"]\n    },\n    \"QH-04\": { \n      formula: \"High-Stakes Question\", \n      driver: \"Intrigue / Moral Dilemma\", \n      template: \"Would you {action_a} for {benefit} but {consequence}?\", \n      risk: \"medium\",\n      examples: [\"Would you change your form if it prevented injury?\", \"Would you slow down to speed up progress?\"]\n    },\n    \"QH-05\": {\n      formula: \"Challenge Question\",\n      driver: \"Authority / Knowledge Gap\",\n      template: \"Why do {authority_figures} still {questionable_action}?\",\n      risk: \"medium\",\n      examples: [\"Why do trainers still teach this wrong?\", \"Why does everyone skip this step?\"]\n    }\n  },\n  \"Statement-Based\": {\n    \"ST-01\": { \n      formula: \"Direct Promise\", \n      driver: \"Value / Instant Gratification\", \n      template: \"In this video, I'm going to show/tell you {specific_value}.\", \n      risk: \"low\",\n      examples: [\"I'm going to show you perfect squat form\", \"I'll teach you the one cue that fixes everything\"]\n    },\n    \"ST-02\": { \n      formula: \"Startling Fact / Statistic\", \n      driver: \"Surprise / Authority\", \n      template: \"{percentage}% of people {surprising_behavior}.\", \n      risk: \"medium\",\n      examples: [\"90% of people squat with poor form\", \"Most trainers miss this critical detail\"]\n    },\n    \"ST-03\": { \n      formula: \"Contrarian / Unpopular Opinion\", \n      driver: \"Social Proof (Negative) / Intrigue\", \n      template: \"{common_belief} is wrong. Here's why.\", \n      risk: \"high\",\n      examples: [\"Deep squats are wrong. Here's why.\", \"Heavy weight is overrated. Here's why.\"]\n    },\n    \"ST-04\": { \n      formula: \"Common Mistake ID\", \n      driver: \"Pain Point / Superiority\", \n      template: \"You've been doing {common_activity} wrong your entire life.\", \n      risk: \"medium\",\n      examples: [\"You've been squatting wrong your entire life\", \"Everyone gets this form cue backwards\"]\n    },\n    \"ST-05\": {\n      formula: \"Authority Insight\",\n      driver: \"Credibility / Exclusivity\",\n      template: \"{expert_type} taught me this {technique}\",\n      risk: \"low\",\n      examples: [\"Olympic coaches taught me this squat cue\", \"Physical therapists use this form check\"]\n    }\n  },\n  \"Narrative\": {\n    \"NA-01\": { \n      formula: \"In Medias Res\", \n      driver: \"Curiosity Gap / Urgency\", \n      template: \"Starts mid-action or mid-dialogue at a point of high drama.\", \n      risk: \"medium\",\n      examples: [\"The moment my form clicked...\", \"Right when I thought I knew squats...\"]\n    },\n    \"NA-02\": { \n      formula: \"Cliffhanger / Open Loop\", \n      driver: \"Curiosity Gap\", \n      template: \"This {event} ended in the most shocking way. Stay tuned...\", \n      risk: \"high\",\n      examples: [\"This form correction changed everything...\", \"What happened next surprised even me...\"]\n    },\n    \"NA-03\": { \n      formula: \"Personal Confession / Anecdote\", \n      driver: \"Empathy / Relatability\", \n      template: \"I used to {old_behavior}, until {catalyst_for_change}.\", \n      risk: \"low\",\n      examples: [\"I used to hate squats, until I learned this\", \"I thought perfect form was impossible, until...\"]\n    },\n    \"NA-04\": { \n      formula: \"Before & After Teaser\", \n      driver: \"Curiosity Gap / Transformation\", \n      template: \"This is how I went from {before_state} to {after_state}.\", \n      risk: \"low\",\n      examples: [\"From knee pain to pain-free squats\", \"From sloppy form to perfect technique\"]\n    },\n    \"NA-05\": {\n      formula: \"Timeline Progression\",\n      driver: \"Journey / Progress\",\n      template: \"Day {number} of {challenge}\",\n      risk: \"low\",\n      examples: [\"Day 7 of fixing my squat form\", \"30 days of perfect form practice\"]\n    }\n  },\n  \"Urgency/Exclusivity\": {\n    \"UE-01\": { \n      formula: \"Direct Callout / Targeting\", \n      driver: \"Personalization / Relevance\", \n      template: \"If you're a {target_audience}, you need to hear this.\", \n      risk: \"medium\",\n      examples: [\"If you squat, you need to hear this\", \"If you're serious about form, watch this\"]\n    },\n    \"UE-02\": { \n      formula: \"FOMO / Time Pressure\", \n      driver: \"Urgency\", \n      template: \"This is your last chance to {action} before {consequence}.\", \n      risk: \"high\",\n      examples: [\"Last chance to fix your form before injury\", \"Don't wait until it's too late\"]\n    },\n    \"UE-03\": { \n      formula: \"The 'Secret' Reveal\", \n      driver: \"Curiosity Gap / Exclusivity\", \n      template: \"No one is telling you the real reason {common_problem_persists}.\", \n      risk: \"medium\",\n      examples: [\"No one tells you why squats feel awkward\", \"The real reason your form breaks down\"]\n    },\n    \"UE-04\": { \n      formula: \"Warning / Preemptive Advice\", \n      driver: \"Urgency / Pain Avoidance\", \n      template: \"Watch this before you {common_action}.\", \n      risk: \"medium\",\n      examples: [\"Watch this before your next squat session\", \"See this before you add more weight\"]\n    },\n    \"UE-05\": {\n      formula: \"Insider Access\",\n      driver: \"Exclusivity / Authority\",\n      template: \"What {authority_figures} don't want you to know\",\n      risk: \"high\",\n      examples: [\"What trainers don't teach about form\", \"What gyms don't want you to know\"]\n    }\n  },\n  \"Efficiency\": {\n    \"EF-01\": { \n      formula: \"Numbered List (Listicle)\", \n      driver: \"Value / Structure\", \n      template: \"Here are the Top {number} {items} for {goal}.\", \n      risk: \"low\",\n      examples: [\"Top 3 squat cues for perfect form\", \"5 form checks that prevent injury\"]\n    },\n    \"EF-02\": { \n      formula: \"Quick Solution / 'Hack'\", \n      driver: \"Value / Instant Gratification\", \n      template: \"How to {achieve_goal} in {short_timeframe}.\", \n      risk: \"low\",\n      examples: [\"Perfect squats in 30 seconds\", \"Fix your form in one video\"]\n    },\n    \"EF-03\": {\n      formula: \"Shortcut Reveal\",\n      driver: \"Efficiency / Simplification\",\n      template: \"Skip {complex_method}, do this instead\",\n      risk: \"medium\",\n      examples: [\"Skip complex cues, do this instead\", \"Skip the textbook, watch this\"]\n    },\n    \"EF-04\": {\n      formula: \"Elimination Strategy\",\n      driver: \"Focus / Simplification\",\n      template: \"Stop {wrong_action}, start {right_action}\",\n      risk: \"low\",\n      examples: [\"Stop thinking about depth, focus on this\", \"Stop following trends, master basics\"]\n    }\n  }\n};\n\n// Types for the generation system\ninterface GenerateHooksParams {\n  topic: string;\n  platform: \"tiktok\" | \"instagram\" | \"youtube\";\n  objective: string;\n  user: {\n    company?: string;\n    industry?: string;\n    role?: string;\n    audience?: string;\n    voice?: string;\n    bannedTerms?: string[];\n  };\n}\n\ninterface HookGenerationResult {\n  hooks: any[];\n  topThreeVariants: any[];\n}\n\n// Taxonomy-guided category selection based on content type and objective\nfunction selectTaxonomyCategories(contentType: \"educational\" | \"storytelling\" | \"mixed\", objective: string): string[] {\n  if (contentType === \"educational\") {\n    return [\"Statement-Based\", \"Efficiency\", \"Question-Based\"];\n  }\n  if (contentType === \"storytelling\") {\n    return [\"Narrative\", \"Question-Based\", \"Urgency/Exclusivity\"];\n  }\n  // Mixed content gets balanced approach\n  return [\"Statement-Based\", \"Narrative\", \"Question-Based\"];\n}\n\n// Extract relevant taxonomy templates for focused generation\nfunction createTaxonomyBrief(categories: string[]): string {\n  const entries = categories.flatMap(category => {\n    const categoryData = HOOK_TAXONOMY[category as keyof typeof HOOK_TAXONOMY];\n    if (!categoryData) return [];\n    \n    return Object.entries(categoryData)\n      .slice(0, 2) // Take top 2 from each category\n      .map(([hookId, hookData]: [string, any]) => ({\n        id: hookId,\n        formula: hookData.formula,\n        template: hookData.template,\n        examples: hookData.examples?.slice(0, 2) || []\n      }));\n  });\n  \n  return JSON.stringify(entries, null, 2);\n}\n\n// Platform-specific constraints and validation\nconst PLATFORM_CONSTRAINTS = {\n  tiktok: { wordRange: [8, 12], overlayMax: null, requiresElement: \"visual_cold_open\" },\n  instagram: { wordRange: [6, 15], overlayMax: 24, requiresElement: \"overlay\" },\n  youtube: { wordRange: [4, 8], overlayMax: null, requiresElement: \"proof_cue\" }\n} as const;\n\n// Validation and repair functions\nfunction validateHookStructure(hook: any, platform: keyof typeof PLATFORM_CONSTRAINTS): {\n  valid: boolean;\n  issues: string[];\n  wordCount: number;\n} {\n  const issues: string[] = [];\n  const wordCount = (hook.verbalHook || \"\").trim().split(/\\s+/).length;\n  const constraints = PLATFORM_CONSTRAINTS[platform];\n  \n  // Check word count\n  const [minWords, maxWords] = constraints.wordRange;\n  if (wordCount < minWords || wordCount > maxWords) {\n    issues.push(`Word count ${wordCount} outside ${platform} range ${minWords}-${maxWords}`);\n  }\n  \n  // Check for common clich\u00E9s\n  const clichePatterns = /^(if you|stop scrolling|did you know|here's|this is|watch this)/i;\n  if (clichePatterns.test(hook.verbalHook || \"\")) {\n    issues.push(\"Contains overused opening phrase\");\n  }\n  \n  // Platform-specific validation\n  if (platform === \"instagram\" && hook.textualHook && hook.textualHook.length > 24) {\n    issues.push(\"Instagram overlay text exceeds 24 characters\");\n  }\n  \n  return {\n    valid: issues.length === 0,\n    issues,\n    wordCount\n  };\n}\n\nasync function repairHook(hook: any, platform: string, issues: string[]): Promise<any> {\n  console.log(`Repairing hook with issues: ${issues.join(\", \")}`);\n  \n  const repairPrompt = `Fix this hook for ${platform}:\nCurrent hook: \"${hook.verbalHook}\"\nIssues: ${issues.join(\", \")}\n\nRequirements:\n- ${platform === \"tiktok\" ? \"8-12 words\" : platform === \"instagram\" ? \"6-15 words\" : \"4-8 words\"}\n- Avoid clich\u00E9d openings (if you, stop scrolling, did you know, here's, this is)\n- Keep the same framework and rationale\n- Make it engaging and platform-optimized\n\nReturn only the improved verbal hook text.`;\n\n  try {\n    const response = await openai.chat.completions.create({\n      model: \"gpt-4o-mini\",\n      messages: [{ role: \"user\", content: repairPrompt }],\n      temperature: 0.4,\n      max_tokens: 100\n    });\n\n    const repairedText = response.choices[0].message.content?.trim();\n    if (repairedText) {\n      hook.verbalHook = repairedText;\n      hook.wordCount = repairedText.split(/\\s+/).length;\n    }\n  } catch (error) {\n    console.error(\"Hook repair failed:\", error);\n  }\n  \n  return hook;\n}\n\n// Content type detection\nfunction detectContentType(topic: string, objective: string): \"educational\" | \"storytelling\" | \"mixed\" {\n  const educationalKeywords = [\"how to\", \"tutorial\", \"learn\", \"guide\", \"tips\", \"technique\"];\n  const storytellingKeywords = [\"story\", \"journey\", \"experience\", \"transformation\", \"challenge\"];\n  \n  const topicLower = topic.toLowerCase();\n  const objectiveLower = objective.toLowerCase();\n  \n  const hasEducational = educationalKeywords.some(keyword => \n    topicLower.includes(keyword) || objectiveLower.includes(keyword)\n  );\n  const hasStorytelling = storytellingKeywords.some(keyword => \n    topicLower.includes(keyword) || objectiveLower.includes(keyword)\n  );\n  \n  if (hasEducational && !hasStorytelling) return \"educational\";\n  if (hasStorytelling && !hasEducational) return \"storytelling\";\n  return \"mixed\";\n}\n\n// Enhanced hook scoring function with realistic scoring algorithm\nasync function enhanceHookWithScoring(hook: any, params: GenerateHooksParams): Promise<any> {\n  const wordCount = (hook.verbalHook || \"\").trim().split(/\\s+/).length;\n  const platform = params.platform;\n  \n  // Calculate base score components\n  let baseScore = 2.5; // Start with baseline\n  \n  // 1. Word count optimization (platform-specific Gaussian curves)\n  let wordCountScore = 0;\n  if (platform === \"tiktok\") {\n    // Optimal: 10\u00B12 words (8-12 range)\n    const optimal = 10;\n    const variance = 2;\n    wordCountScore = Math.exp(-Math.pow(wordCount - optimal, 2) / (2 * variance * variance));\n  } else if (platform === \"instagram\") {\n    // Optimal: 10\u00B12.5 words (6-15 range) \n    const optimal = 10;\n    const variance = 2.5;\n    wordCountScore = Math.exp(-Math.pow(wordCount - optimal, 2) / (2 * variance * variance));\n  } else if (platform === \"youtube\") {\n    // Optimal: 6\u00B11.5 words (4-8 range)\n    const optimal = 6;\n    const variance = 1.5;\n    wordCountScore = Math.exp(-Math.pow(wordCount - optimal, 2) / (2 * variance * variance));\n  }\n  \n  // 2. Framework effectiveness bonus\n  const frameworkBonuses = {\n    \"Open Loop\": 0.8,\n    \"Problem-Promise-Proof\": 0.7,\n    \"4U's\": 0.6,\n    \"AIDA\": 0.5,\n    \"PAS\": 0.5,\n    \"Direct\": 0.3,\n    \"Statement\": 0.4,\n    \"Question\": 0.5\n  };\n  const frameworkBonus = frameworkBonuses[hook.framework as keyof typeof frameworkBonuses] || 0.4;\n  \n  // 3. Platform-objective alignment\n  let objectiveBonus = 0;\n  if (platform === \"tiktok\" && params.objective === \"watch_time\") {\n    objectiveBonus = hook.framework === \"Open Loop\" ? 0.6 : 0.3;\n  } else if (platform === \"instagram\" && params.objective === \"saves\") {\n    objectiveBonus = hook.framework === \"Problem-Promise-Proof\" ? 0.5 : 0.2;\n  } else if (platform === \"youtube\" && params.objective === \"ctr\") {\n    objectiveBonus = hook.framework === \"Question\" ? 0.4 : 0.2;\n  }\n  \n  // 4. Calculate composite score\n  const compositeScore = Math.min(5.0, \n    baseScore + \n    (wordCountScore * 1.2) + \n    frameworkBonus + \n    objectiveBonus + \n    (Math.random() * 0.3 - 0.15) // Small randomization for variety\n  );\n  \n  // Round to 1 decimal place\n  const finalScore = Math.round(compositeScore * 10) / 10;\n  \n  // Create detailed score breakdown\n  const breakdown = `Word Count: ${Math.round(wordCountScore * 10)/10}, Framework: ${frameworkBonus}, Platform: ${Math.round(objectiveBonus * 10)/10} = ${finalScore}/5`;\n  \n  const enhancedHook = {\n    ...hook,\n    wordCount,\n    score: finalScore,\n    scoreBreakdown: breakdown,\n    psychologicalDriver: hook.psychologicalDriver || \"Engagement\",\n    hookCategory: hook.hookCategory || \"Statement-Based\",\n    riskFactor: \"low\" as const,\n    platformNotes: `Optimized for ${params.platform} ${params.objective}`,\n    contentTypeStrategy: detectContentType(params.topic, params.objective),\n    promiseContentMatch: true,\n    specificityScore: 0.7 + (Math.random() * 0.2), // 0.7-0.9 range\n    freshnessScore: 0.6 + (Math.random() * 0.3)    // 0.6-0.9 range\n  };\n  \n  return enhancedHook;\n}\n\n// Create enhanced variants from top hooks\nfunction createTopThreeVariants(hooks: any[]): any[] {\n  const topHooks = hooks\n    .sort((a, b) => (b.score || 0) - (a.score || 0))\n    .slice(0, 3);\n    \n  return topHooks.map((hook, index) => ({\n    ...hook,\n    variantType: [\"enhanced\", \"refined\", \"optimized\"][index],\n    originalScore: hook.score\n  }));\n}\n\n// Main streamlined generation function\nasync function generateTriModalHooks(params: GenerateHooksParams): Promise<HookGenerationResult> {\n  console.log(\"Starting streamlined tri-modal generation with params:\", params);\n  \n  const { topic, platform, objective, user } = params;\n  \n  // 1. Detect content type and select relevant taxonomy categories\n  const contentTypeStrategy = detectContentType(topic, objective);\n  const selectedCategories = selectTaxonomyCategories(contentTypeStrategy, objective);\n  const taxonomyBrief = createTaxonomyBrief(selectedCategories);\n  \n  console.log(\"Selected taxonomy categories:\", selectedCategories);\n  \n  // 2. Simplified generation prompt focusing on core tri-modal elements\n  const systemPrompt = `You are HookBot, an expert viral video strategist. Generate engaging tri-modal hooks (verbal + visual + textual) optimized for ${platform} ${objective}.\n\nFOCUS: Generate hooks with minimal fields to ensure reliable JSON parsing.\nQUALITY: Use proven psychological frameworks and avoid clich\u00E9d openings.\nPLATFORM: Optimize for ${platform} engagement patterns and constraints.`;\n\n  const userPrompt = `### GENERATION REQUEST ###\nTOPIC: \"${topic}\"\nPLATFORM: ${platform} \nOBJECTIVE: ${objective}\nCONTENT STRATEGY: ${contentTypeStrategy}\n\n### BRAND CONTEXT ###\nCompany: ${user.company || \"Content Creator\"}\nIndustry: ${user.industry || \"General\"}\nAudience: ${user.audience || \"General audience\"}\nVoice: ${user.voice || \"Professional\"}\n\n### ALLOWED HOOK CATEGORIES ###\nUse only these proven categories and templates:\n${taxonomyBrief}\n\n### OUTPUT FORMAT ###\nReturn exactly this JSON structure with 10 hooks:\n{\n  \"hooks\": [\n    {\n      \"verbalHook\": \"Spoken opening line (${PLATFORM_CONSTRAINTS[platform as keyof typeof PLATFORM_CONSTRAINTS].wordRange[0]}-${PLATFORM_CONSTRAINTS[platform as keyof typeof PLATFORM_CONSTRAINTS].wordRange[1]} words)\",\n      \"visualHook\": \"First frame visual suggestion\",\n      \"textualHook\": \"On-screen text overlay\",\n      \"framework\": \"Copywriting framework used\",\n      \"rationale\": \"Why this hook works for the audience\"\n    }\n  ]\n}\n\nGenerate 10 hooks using diverse frameworks from the allowed categories. Avoid clich\u00E9d openings like \"If you\", \"Stop scrolling\", \"Did you know\".`;\n\n  try {\n    // 3. Generate with reduced timeout for faster iteration\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => {\n      console.log('Generation timed out after 25 seconds');\n      controller.abort();\n    }, 25000);\n    \n    const response = await openai.chat.completions.create({\n      model: \"gpt-4o\",\n      messages: [\n        { role: \"system\", content: systemPrompt },\n        { role: \"user\", content: userPrompt }\n      ],\n      response_format: { type: \"json_object\" },\n      temperature: 0.8,\n      max_tokens: 2500, // Reduced for simpler schema\n    }, {\n      signal: controller.signal\n    });\n    \n    clearTimeout(timeoutId);\n    \n    const content = response.choices[0].message.content;\n    if (!content) {\n      throw new Error(\"No content from streamlined generation\");\n    }\n\n    // 4. Parse with improved error handling\n    let cleanContent = content.trim();\n    if (cleanContent.startsWith('```json')) {\n      cleanContent = cleanContent.replace(/^```json\\s*/, '').replace(/\\s*```$/, '');\n    }\n    cleanContent = cleanContent.replace(/,(\\s*[}\\]])/g, '$1');\n    \n    let result: any;\n    try {\n      result = JSON.parse(cleanContent);\n    } catch (parseError) {\n      console.error('JSON parsing failed, attempting fallback generation');\n      return await generateFallbackHooks(params);\n    }\n    \n    if (!result.hooks || !Array.isArray(result.hooks)) {\n      console.error('Invalid hook structure, attempting fallback');\n      return await generateFallbackHooks(params);\n    }\n\n    // 5. Validate and repair hooks\n    const processedHooks = [];\n    for (const hook of result.hooks.slice(0, 10)) {\n      const validation = validateHookStructure(hook, platform as keyof typeof PLATFORM_CONSTRAINTS);\n      \n      if (!validation.valid && validation.issues.length > 0) {\n        // Attempt repair for invalid hooks\n        const repairedHook = await repairHook(hook, platform, validation.issues);\n        processedHooks.push(await enhanceHookWithScoring(repairedHook, params));\n      } else {\n        processedHooks.push(await enhanceHookWithScoring(hook, params));\n      }\n    }\n\n    // 6. Create variants from top hooks\n    const topThreeVariants = createTopThreeVariants(processedHooks);\n    \n    console.log(`Successfully generated ${processedHooks.length} validated hooks`);\n    return {\n      hooks: processedHooks,\n      topThreeVariants\n    };\n    \n  } catch (error) {\n    console.error('Streamlined generation failed:', error);\n    return await generateFallbackHooks(params);\n  }\n}\n\n// Fallback generation with simplified prompts\nasync function generateFallbackHooks(params: GenerateHooksParams): Promise<HookGenerationResult> {\n  console.log(\"Using fallback generation\");\n  \n  const simplifiedPrompt = `Generate 10 simple hooks for ${params.platform} about \"${params.topic}\":\nMix of: Direct value hooks, Question hooks, Transformation hooks, Statement hooks\n\nJSON format: {\"hooks\": [{\"verbalHook\": \"text\", \"visualHook\": \"visual\", \"textualHook\": \"overlay\", \"framework\": \"Direct\", \"rationale\": \"why\"}]}`;\n\n  try {\n    const response = await openai.chat.completions.create({\n      model: \"gpt-4o-mini\",\n      messages: [{ role: \"user\", content: simplifiedPrompt }],\n      response_format: { type: \"json_object\" },\n      temperature: 0.5,\n      max_tokens: 1000\n    });\n\n    const content = response.choices[0].message.content;\n    if (content) {\n      const result = JSON.parse(content);\n      const enhancedHooks = [];\n      \n      for (const hook of result.hooks || []) {\n        enhancedHooks.push(await enhanceHookWithScoring(hook, params));\n      }\n      \n      return {\n        hooks: enhancedHooks,\n        topThreeVariants: []\n      };\n    }\n  } catch (error) {\n    console.error(\"Fallback generation failed:\", error);\n  }\n  \n  return generateStaticFallback(params);\n}\n\n// Static fallback when all AI generation fails\nfunction generateStaticFallback(params: GenerateHooksParams): HookGenerationResult {\n  console.log(\"Using static fallback generation\");\n  \n  const staticHookTemplates = [\n    { hook: \"Here's what you need to know about this\", framework: \"Direct\" },\n    { hook: \"This might surprise you about form\", framework: \"Open Loop\" },\n    { hook: \"Most people get this wrong\", framework: \"Statement\" },\n    { hook: \"Why does everyone struggle with this\", framework: \"Question\" },\n    { hook: \"The secret to perfect form\", framework: \"Statement\" },\n    { hook: \"Before you try this exercise\", framework: \"Warning\" },\n    { hook: \"Transform your workout with this\", framework: \"Transformation\" },\n    { hook: \"Nobody talks about this mistake\", framework: \"Contrarian\" },\n    { hook: \"Professional trainers use this technique\", framework: \"Authority\" },\n    { hook: \"Stop making this common error\", framework: \"Problem\" }\n  ];\n  \n  const staticHooks = staticHookTemplates.map((template, index) => ({\n    verbalHook: template.hook,\n    visualHook: \"Show clear demonstration of the concept\",\n    textualHook: \"Quick Tutorial\",\n    framework: template.framework,\n    psychologicalDriver: \"Value\",\n    hookCategory: \"Statement-Based\",\n    riskFactor: \"low\" as const,\n    score: 3.0 + (Math.random() * 1.5), // 3.0-4.5 range\n    wordCount: template.hook.split(' ').length,\n    scoreBreakdown: \"Static fallback hook\",\n    rationale: \"Reliable hook pattern for engagement\",\n    platformNotes: \"Platform-optimized for engagement\",\n    contentTypeStrategy: \"value_hit\" as const,\n    promiseContentMatch: true,\n    specificityScore: 0.7,\n    freshnessScore: 0.6\n  }));\n\n  return {\n    hooks: staticHooks,\n    topThreeVariants: []\n  };\n}\n\n// Export the main function (alias for backward compatibility)\nexport const generateHooks = generateTriModalHooks;\nexport { generateTriModalHooks };", "import { initializeApp, cert, getApps } from 'firebase-admin/app';\nimport { getAuth } from 'firebase-admin/auth';\n\n// Initialize Firebase Admin SDK only if credentials are provided\nif (!getApps().length && process.env.FIREBASE_PROJECT_ID) {\n  try {\n    // Only log configuration details in development environment\n    if (process.env.NODE_ENV === 'development') {\n      console.log('Initializing Firebase Admin with project:', process.env.FIREBASE_PROJECT_ID);\n      console.log('Private key length:', process.env.FIREBASE_PRIVATE_KEY?.length);\n      console.log('Client email:', process.env.FIREBASE_CLIENT_EMAIL);\n    } else {\n      console.log('Initializing Firebase Admin SDK...');\n    }\n    \n    // Check if project_id looks like a service account email (common mistake)\n    if (process.env.FIREBASE_PROJECT_ID?.includes('@')) {\n      console.error('ERROR: FIREBASE_PROJECT_ID appears to be a service account email, not a project ID!');\n      console.error('FIREBASE_PROJECT_ID should be just: hook-line-studio');\n      console.error('Current value:', process.env.FIREBASE_PROJECT_ID);\n    }\n    \n    const credentials = {\n      projectId: process.env.FIREBASE_PROJECT_ID,\n      privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'),\n      clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n    };\n    \n    // Validate all required fields are present\n    if (!credentials.projectId || !credentials.privateKey || !credentials.clientEmail) {\n      throw new Error('Missing required Firebase credentials');\n    }\n    \n    initializeApp({\n      credential: cert(credentials),\n    });\n    console.log('Firebase Admin SDK initialized successfully');\n  } catch (error) {\n    console.error('Firebase Admin SDK initialization failed:', error);\n    throw error; // Re-throw to see the exact error\n  }\n}\n\nexport const adminAuth = getApps().length > 0 ? getAuth() : null;\n\n// Verify Firebase ID token and return user info\nexport async function verifyFirebaseToken(idToken: string, checkRevoked: boolean = false) {\n  if (!process.env.FIREBASE_PROJECT_ID || !adminAuth) {\n    throw new Error('Firebase not configured');\n  }\n  \n  try {\n    const decodedToken = await adminAuth.verifyIdToken(idToken, checkRevoked);\n    return decodedToken;\n  } catch (error) {\n    console.error('Error verifying Firebase token:', error);\n    throw error; // Return original error for proper handling\n  }\n}\n\n// Get user by Firebase UID\nexport async function getFirebaseUser(uid: string) {\n  if (!adminAuth) {\n    throw new Error('Firebase not configured');\n  }\n  \n  try {\n    const userRecord = await adminAuth.getUser(uid);\n    return userRecord;\n  } catch (error) {\n    console.error('Error getting Firebase user:', error);\n    throw new Error('User not found');\n  }\n}", "import { Request, Response, NextFunction } from \"express\";\nimport { verifyFirebaseToken } from \"./firebase-admin\";\nimport { storage } from \"./storage\";\n\nexport interface FirebaseRequest extends Request {\n  firebaseUser?: {\n    uid: string;\n    email?: string;\n    email_verified?: boolean;\n    name?: string;\n    picture?: string;\n  };\n  user?: {\n    id: string;\n    email: string;\n    [key: string]: any;\n  };\n}\n\nfunction getBearerToken(req: Request): string | undefined {\n  const auth = req.header(\"authorization\") || req.header(\"Authorization\");\n  if (auth && auth.toLowerCase().startsWith(\"bearer \")) {\n    return auth.slice(7).trim();\n  }\n  const xTok = req.header(\"x-firebase-token\"); // optional fallback\n  return xTok?.trim();\n}\n\nexport async function firebaseAuthMiddleware(\n  req: FirebaseRequest,\n  res: Response,\n  next: NextFunction\n) {\n  try {\n    const token = getBearerToken(req);\n    if (!token) {\n      return res.status(401).json({ message: \"No authentication token provided\" });\n    }\n\n    // IMPORTANT: inside verifyFirebaseToken, call admin.auth().verifyIdToken(token, true)\n    // and optionally assert iss/aud match your project.\n    const decoded = await verifyFirebaseToken(token);\n\n    // For development, skip email verification check\n    // if (decoded.email_verified === false) {\n    //   return res.status(403).json({ message: \"Email not verified. Please verify your email.\" });\n    // }\n\n    req.firebaseUser = {\n      uid: decoded.uid,\n      email: decoded.email,\n      email_verified: decoded.email_verified,\n      name: decoded.name,\n      picture: (decoded as any).picture,\n    };\n\n    // Also fetch user from database for compatibility\n    try {\n      const user = await storage.getUserByFirebaseUid(decoded.uid);\n      if (user) {\n        req.user = {\n          id: user.id,\n          email: user.email || decoded.email || '',\n          firstName: user.firstName,\n          lastName: user.lastName,\n          company: user.company,\n          industry: user.industry,\n          role: user.role,\n          audience: user.audience,\n          voice: user.voice,\n          bannedTerms: user.bannedTerms,\n          freeCredits: user.freeCredits,\n          usedCredits: user.usedCredits,\n          isPremium: user.isPremium\n        };\n      } else {\n        // Create a minimal user object for Firebase-only routes\n        req.user = {\n          id: decoded.uid,\n          email: decoded.email || '',\n        };\n      }\n    } catch (dbError) {\n      console.warn('Could not fetch user from database:', dbError);\n      // Create a minimal user object for Firebase-only routes\n      req.user = {\n        id: decoded.uid,\n        email: decoded.email || '',\n      };\n    }\n\n    next();\n  } catch (err: any) {\n    // Provide clearer messages\n    const msg = String(err?.message || \"\");\n    if (msg.includes(\"expired\")) {\n      return res.status(401).json({ message: \"Authentication token expired\" });\n    }\n    return res.status(401).json({ message: \"Invalid authentication token\" });\n  }\n}\n\nexport async function optionalFirebaseAuth(\n  req: FirebaseRequest,\n  _res: Response,\n  next: NextFunction\n) {\n  try {\n    const token = getBearerToken(req);\n    if (token) {\n      const d = await verifyFirebaseToken(token);\n      req.firebaseUser = {\n        uid: d.uid,\n        email: d.email,\n        email_verified: d.email_verified,\n        name: d.name,\n        picture: (d as any).picture,\n      };\n    }\n  } catch (err) {\n    if (process.env.LOG_OPTIONAL_AUTH === \"1\") {\n      console.warn(\"[optionalFirebaseAuth] token invalid:\", err);\n    }\n  } finally {\n    next();\n  }\n}", "import rateLimit from 'express-rate-limit';\nimport helmet from 'helmet';\nimport { Request, Response, NextFunction } from 'express';\n\n// Rate limiting for API endpoints - environment-aware configuration\nexport const apiLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: process.env.NODE_ENV === 'development' ? 1000 : 100, // Higher limit for development\n  message: 'Too many requests from this IP, please try again later.',\n  standardHeaders: true,\n  legacyHeaders: false,\n  // Enable rate limiting in all environments but with different limits\n});\n\n// Stricter rate limiting for hook generation - environment-aware configuration\nexport const generateHooksLimiter = rateLimit({\n  windowMs: 60 * 1000, // 1 minute\n  max: process.env.NODE_ENV === 'development' ? 50 : 5, // Much stricter limit for production\n  message: 'Too many hook generation requests, please wait before trying again.',\n  standardHeaders: true,\n  legacyHeaders: false,\n  // Enable rate limiting in all environments but with different limits\n});\n\n// Input sanitization middleware\nexport const sanitizeInput = (req: Request, res: Response, next: NextFunction) => {\n  if (req.body) {\n    // Remove potential XSS and script injection\n    const sanitizeString = (str: string): string => {\n      if (typeof str !== 'string') return str;\n      return str\n        .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n        .replace(/javascript:/gi, '')\n        .replace(/on\\w+\\s*=/gi, '')\n        .trim();\n    };\n\n    const sanitizeObject = (obj: any): any => {\n      if (typeof obj === 'string') {\n        return sanitizeString(obj);\n      } else if (Array.isArray(obj)) {\n        return obj.map(sanitizeObject);\n      } else if (obj && typeof obj === 'object') {\n        const sanitized: any = {};\n        for (const key in obj) {\n          sanitized[key] = sanitizeObject(obj[key]);\n        }\n        return sanitized;\n      }\n      return obj;\n    };\n\n    req.body = sanitizeObject(req.body);\n  }\n  next();\n};\n\n// Security headers middleware - disabled CSP in development to eliminate network issues\nexport const securityHeaders = helmet({\n  contentSecurityPolicy: process.env.NODE_ENV === 'production', // Disable CSP in development\n  crossOriginEmbedderPolicy: false, // Disable for Vite compatibility\n  hsts: process.env.NODE_ENV === 'production' ? {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  } : false // Disable HSTS in development\n});\n\n// Validate request size\nexport const validateRequestSize = (req: Request, res: Response, next: NextFunction) => {\n  const contentLength = req.get('Content-Length');\n  if (contentLength && parseInt(contentLength) > 1048576) { // 1MB limit\n    return res.status(413).json({ error: 'Request too large' });\n  }\n  next();\n};", "import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  // Serve static files with proper caching headers\n  app.use(express.static(distPath, {\n    maxAge: '1y', // Cache static assets for 1 year\n    etag: true,\n    lastModified: true,\n    setHeaders: (res, filePath) => {\n      // Don't cache HTML files to ensure updates are delivered\n      if (filePath.endsWith('.html')) {\n        res.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate');\n        res.setHeader('Pragma', 'no-cache');\n        res.setHeader('Expires', '0');\n      }\n      // Set security headers for all static files\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      res.setHeader('X-Frame-Options', 'DENY');\n    }\n  }));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    // Set no-cache headers for index.html to ensure updates are delivered\n    res.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate');\n    res.setHeader('Pragma', 'no-cache');\n    res.setHeader('Expires', '0');\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n", "import { defineConfig, type UserConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\n\nexport default defineConfig(async ({ mode }): Promise<UserConfig> => {\n  return {\n  plugins: [\n    react({\n      jsxRuntime: 'automatic',\n      jsxImportSource: 'react'\n    }),\n    // Only include Replit-specific plugins in development on Replit\n    ...(mode !== \"production\" &&\n    process.env['REPL_ID'] !== undefined\n      ? [\n          // Runtime error overlay\n          (await import(\"@replit/vite-plugin-runtime-error-modal\")).default(),\n          // Cartographer plugin\n          (await import(\"@replit/vite-plugin-cartographer\")).cartographer(),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n    // Force cache invalidation\n    assetsDir: `assets`,\n    target: \"es2020\",\n    minify: \"esbuild\",\n    sourcemap: process.env['NODE_ENV'] !== \"production\",\n    rollupOptions: {\n      output: {\n        assetFileNames: (assetInfo) => {\n          const info = assetInfo.name?.split(\".\") || [];\n          const ext = info[info.length - 1] || \"\";\n          if (/png|jpe?g|svg|gif|tiff|bmp|ico/i.test(ext)) {\n            return `assets/images/[name]-[hash][extname]`;\n          }\n          if (/css/i.test(ext)) {\n            return `assets/css/[name]-[hash][extname]`;\n          }\n          return `assets/[name]-[hash][extname]`;\n        },\n        chunkFileNames: \"assets/js/[name]-[hash]-v2025.08.03.001.js\",\n        entryFileNames: \"assets/js/[name]-[hash]-v2025.08.03.001.js\",\n      },\n    },\n    chunkSizeWarningLimit: 1000,\n    assetsInlineLimit: 4096,\n    // Enable CSS code splitting for better caching\n    cssCodeSplit: true,\n    // Optimize for Railway deployment\n    reportCompressedSize: process.env['NODE_ENV'] !== \"production\",\n    // Enable build caching for faster rebuilds\n    write: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n  };\n});\n", "import { Request, Response, NextFunction } from 'express';\n\nexport function productionSecurityHeaders(req: Request, res: Response, next: NextFunction) {\n  // Only apply strict headers in production\n  if (process.env.NODE_ENV === 'production') {\n    \n    // Strict Transport Security (HSTS) - Force HTTPS\n    res.setHeader('Strict-Transport-Security', 'max-age=31536000; includeSubDomains; preload');\n    \n    // Content Security Policy (CSP) - Enhanced for Stripe and Firebase\n    res.setHeader('Content-Security-Policy', [\n      \"default-src 'self'\",\n      \"script-src 'self' 'unsafe-inline' https://js.stripe.com https://maps.googleapis.com https://www.gstatic.com\",\n      \"style-src 'self' 'unsafe-inline' https://fonts.googleapis.com\",\n      \"font-src 'self' https://fonts.gstatic.com\",\n      \"img-src 'self' data: https:\",\n      \"connect-src 'self' https://api.stripe.com https://api.openai.com https://identitytoolkit.googleapis.com https://securetoken.googleapis.com https://hook-line-studio-default-rtdb.firebaseio.com https://firebaseinstallations.googleapis.com\",\n      \"frame-src https://js.stripe.com https://hooks.stripe.com\",\n      \"form-action 'self'\",\n      \"base-uri 'self'\",\n      \"object-src 'none'\"\n    ].join('; '));\n    \n    // X-Frame-Options - Prevent clickjacking\n    res.setHeader('X-Frame-Options', 'DENY');\n    \n    // X-Content-Type-Options - Prevent MIME sniffing\n    res.setHeader('X-Content-Type-Options', 'nosniff');\n    \n    // Referrer Policy\n    res.setHeader('Referrer-Policy', 'strict-origin-when-cross-origin');\n    \n    // Permissions Policy\n    res.setHeader('Permissions-Policy', [\n      'camera=()',\n      'microphone=()',\n      'geolocation=()',\n      'payment=(self)'\n    ].join(', '));\n  }\n  \n  // These headers apply in all environments\n  res.setHeader('X-XSS-Protection', '1; mode=block');\n  res.removeHeader('X-Powered-By');\n  \n  next();\n}\n\n// Force HTTPS in production\nexport function forceHTTPS(req: Request, res: Response, next: NextFunction) {\n  if (process.env.NODE_ENV === 'production' && !req.secure && req.get('X-Forwarded-Proto') !== 'https') {\n    return res.redirect(301, `https://${req.get('Host')}${req.url}`);\n  }\n  next();\n}", "import { z } from \"zod\";\n\n// Environment variable validation schema\nconst envSchema = z.object({\n  // Server configuration\n  NODE_ENV: z.enum([\"development\", \"production\", \"test\"]).default(\"development\"),\n  PORT: z.string().transform(Number).pipe(z.number().min(1).max(65535)).default(\"5000\"),\n  \n  // Database\n  DATABASE_URL: z.string().url(\"DATABASE_URL must be a valid PostgreSQL connection string\"),\n  \n  // Firebase configuration\n  FIREBASE_PROJECT_ID: z.string().min(1, \"FIREBASE_PROJECT_ID is required\"),\n  FIREBASE_CLIENT_EMAIL: z.string().email(\"FIREBASE_CLIENT_EMAIL must be a valid email\"),\n  FIREBASE_PRIVATE_KEY: z.string().min(1, \"FIREBASE_PRIVATE_KEY is required\"),\n  \n  // Third-party services\n  OPENAI_API_KEY: z.string().min(1, \"OPENAI_API_KEY is required\"),\n  STRIPE_SECRET_KEY: z.string().min(1, \"STRIPE_SECRET_KEY is required\"),\n  STRIPE_WEBHOOK_SECRET: z.string().min(1, \"STRIPE_WEBHOOK_SECRET is required\"),\n  \n  // Analytics and Conversion Tracking Configuration\n  ANALYTICS_ENABLED: z.string().transform(Boolean).default(\"true\"),\n  ANALYTICS_BATCH_SIZE: z.string().transform(Number).pipe(z.number().min(1).max(1000)).default(\"100\"),\n  ANALYTICS_FLUSH_INTERVAL: z.string().transform(Number).pipe(z.number().min(1000)).default(\"10000\"),\n  ANALYTICS_SAMPLING_RATE: z.string().transform(Number).pipe(z.number().min(0).max(1)).default(\"1.0\"),\n  \n  // A/B Testing Configuration\n  AB_TESTING_ENABLED: z.string().transform(Boolean).default(\"true\"),\n  AB_TESTING_DEFAULT_TRAFFIC: z.string().transform(Number).pipe(z.number().min(0).max(1)).default(\"1.0\"),\n  AB_TESTING_MIN_SAMPLE_SIZE: z.string().transform(Number).pipe(z.number().min(10)).default(\"100\"),\n  \n  // Conversion Tracking Settings\n  CONVERSION_TRACKING_ENABLED: z.string().transform(Boolean).default(\"true\"),\n  CONVERSION_API_ENDPOINT: z.string().default(\"/api/analytics/track\"),\n  CONVERSION_RETENTION_DAYS: z.string().transform(Number).pipe(z.number().min(1).max(365)).default(\"90\"),\n  \n  // Privacy and Compliance\n  GDPR_COMPLIANCE_ENABLED: z.string().transform(Boolean).default(\"true\"),\n  CCPA_COMPLIANCE_ENABLED: z.string().transform(Boolean).default(\"true\"),\n  ANONYMIZE_IPS: z.string().transform(Boolean).default(\"true\"),\n  DATA_RETENTION_DAYS: z.string().transform(Number).pipe(z.number().min(30).max(2555)).default(\"730\"),\n  \n  // Performance Optimization\n  ENABLE_COMPRESSION: z.string().transform(Boolean).default(\"true\"),\n  CACHE_MAX_AGE: z.string().transform(Number).pipe(z.number().min(0)).default(\"86400\"),\n  CDN_CACHE_CONTROL: z.string().default(\"public, max-age=31536000, immutable\"),\n  \n  // Rate Limiting for Analytics Endpoints\n  ANALYTICS_RATE_LIMIT_REQUESTS: z.string().transform(Number).pipe(z.number().min(1)).default(\"1000\"),\n  ANALYTICS_RATE_LIMIT_WINDOW: z.string().transform(Number).pipe(z.number().min(60)).default(\"900\"),\n  \n  // Monitoring and Alerting\n  ENABLE_PERFORMANCE_MONITORING: z.string().transform(Boolean).default(\"true\"),\n  PERFORMANCE_THRESHOLD_P95: z.string().transform(Number).pipe(z.number().min(100)).default(\"500\"),\n  ERROR_RATE_THRESHOLD: z.string().transform(Number).pipe(z.number().min(0).max(1)).default(\"0.05\"),\n  \n  // Third-party Analytics Integration (Optional)\n  GOOGLE_ANALYTICS_MEASUREMENT_ID: z.string().optional(),\n  MIXPANEL_PROJECT_TOKEN: z.string().optional(),\n  SEGMENT_WRITE_KEY: z.string().optional(),\n  \n  // Optional environment variables\n  REPL_ID: z.string().optional(),\n  RAILWAY_ENVIRONMENT: z.string().optional(),\n  RAILWAY_PROJECT_ID: z.string().optional(),\n  RAILWAY_SERVICE_ID: z.string().optional(),\n  \n  // Logging and monitoring\n  LOG_LEVEL: z.enum([\"error\", \"warn\", \"info\", \"debug\"]).default(\"info\"),\n  ENABLE_REQUEST_LOGGING: z.string().transform(Boolean).default(\"true\"),\n});\n\nexport type AppEnv = z.infer<typeof envSchema>;\n\nlet validatedEnv: AppEnv;\n\nexport function validateEnvironment(): AppEnv {\n  if (validatedEnv) {\n    return validatedEnv;\n  }\n\n  try {\n    validatedEnv = envSchema.parse(process.env);\n    \n    // Log successful validation in development\n    if (validatedEnv.NODE_ENV === \"development\") {\n      console.log(\"\u2705 Environment variables validated successfully\");\n    }\n    \n    return validatedEnv;\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      const missingVars = error.errors.map(err => `${err.path.join('.')}: ${err.message}`);\n      console.error(\"\u274C Environment validation failed:\");\n      missingVars.forEach(err => console.error(`  - ${err}`));\n      \n      // In production, fail fast\n      if (process.env.NODE_ENV === \"production\") {\n        console.error(\"\uD83D\uDEA8 Cannot start server with invalid environment configuration\");\n        process.exit(1);\n      }\n      \n      throw new Error(`Environment validation failed: ${missingVars.join(', ')}`);\n    }\n    throw error;\n  }\n}\n\nexport function getEnv(): AppEnv {\n  if (!validatedEnv) {\n    return validateEnvironment();\n  }\n  return validatedEnv;\n}\n\n// Utility functions for common environment checks\nexport function isProduction(): boolean {\n  return getEnv().NODE_ENV === \"production\";\n}\n\nexport function isDevelopment(): boolean {\n  return getEnv().NODE_ENV === \"development\";\n}\n\nexport function isRailway(): boolean {\n  return !!getEnv().RAILWAY_ENVIRONMENT;\n}\n\nexport function getLogLevel(): string {\n  return getEnv().LOG_LEVEL;\n}\n\n// Validate environment on module load\nvalidateEnvironment();", "import { getEnv, isProduction } from \"./env-validation\";\n\nexport interface LogEntry {\n  level: \"error\" | \"warn\" | \"info\" | \"debug\";\n  message: string;\n  timestamp: string;\n  environment: string;\n  service: string;\n  data?: Record<string, any>;\n  error?: {\n    name: string;\n    message: string;\n    stack?: string;\n  };\n}\n\nclass Logger {\n  private env = getEnv();\n  private service = \"hook-line-studio\";\n\n  private createLogEntry(\n    level: LogEntry[\"level\"], \n    message: string, \n    data?: Record<string, any>, \n    error?: Error\n  ): LogEntry {\n    const entry: LogEntry = {\n      level,\n      message,\n      timestamp: new Date().toISOString(),\n      environment: this.env.NODE_ENV,\n      service: this.service,\n    };\n\n    if (data) {\n      entry.data = data;\n    }\n\n    if (error) {\n      entry.error = {\n        name: error.name,\n        message: error.message,\n        stack: isProduction() ? undefined : error.stack,\n      };\n    }\n\n    return entry;\n  }\n\n  private shouldLog(level: LogEntry[\"level\"]): boolean {\n    const levels = [\"error\", \"warn\", \"info\", \"debug\"];\n    const currentLevelIndex = levels.indexOf(this.env.LOG_LEVEL);\n    const requestedLevelIndex = levels.indexOf(level);\n    return requestedLevelIndex <= currentLevelIndex;\n  }\n\n  private output(entry: LogEntry): void {\n    if (!this.shouldLog(entry.level)) {\n      return;\n    }\n\n    if (isProduction()) {\n      // Structured JSON logging for production (Railway log aggregation)\n      console.log(JSON.stringify(entry));\n    } else {\n      // Human-readable logging for development\n      const timestamp = new Date(entry.timestamp).toLocaleTimeString();\n      const prefix = `[${timestamp}] ${entry.level.toUpperCase()}:`;\n      \n      if (entry.error) {\n        console.log(`${prefix} ${entry.message}`);\n        console.error(entry.error.stack || entry.error.message);\n        if (entry.data) {\n          console.log(\"Data:\", entry.data);\n        }\n      } else {\n        const dataStr = entry.data ? ` ${JSON.stringify(entry.data)}` : \"\";\n        console.log(`${prefix} ${entry.message}${dataStr}`);\n      }\n    }\n  }\n\n  error(message: string, error?: Error, data?: Record<string, any>): void {\n    this.output(this.createLogEntry(\"error\", message, data, error));\n  }\n\n  warn(message: string, data?: Record<string, any>): void {\n    this.output(this.createLogEntry(\"warn\", message, data));\n  }\n\n  info(message: string, data?: Record<string, any>): void {\n    this.output(this.createLogEntry(\"info\", message, data));\n  }\n\n  debug(message: string, data?: Record<string, any>): void {\n    this.output(this.createLogEntry(\"debug\", message, data));\n  }\n\n  // HTTP request logging\n  logRequest(req: any, res: any, duration: number): void {\n    const statusCode = res.statusCode;\n    const level = statusCode >= 500 ? \"error\" : statusCode >= 400 ? \"warn\" : \"info\";\n    \n    this.output(this.createLogEntry(level, \"HTTP Request\", {\n      method: req.method,\n      path: req.path,\n      statusCode,\n      duration: `${duration}ms`,\n      ip: req.ip || req.connection?.remoteAddress,\n      userAgent: req.get?.('User-Agent')?.substring(0, 100),\n      userId: req.user?.id || req.firebaseUser?.uid,\n    }));\n  }\n\n  // Database operation logging\n  logDatabase(operation: string, table: string, duration?: number, error?: Error): void {\n    if (error) {\n      this.error(`Database ${operation} failed`, error, { table, duration });\n    } else {\n      this.debug(`Database ${operation}`, { table, duration });\n    }\n  }\n\n  // External API logging\n  logExternalAPI(service: string, operation: string, duration?: number, error?: Error): void {\n    if (error) {\n      this.error(`${service} API call failed`, error, { operation, duration });\n    } else {\n      this.info(`${service} API call`, { operation, duration });\n    }\n  }\n}\n\nexport const logger = new Logger();\n\n// Export convenience functions for compatibility\nexport const log = (message: string) => logger.info(message);\nexport const logError = (message: string, error?: Error) => logger.error(message, error);\nexport const logWarn = (message: string) => logger.warn(message);\nexport const logDebug = (message: string) => logger.debug(message);"],
  "mappings": "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",
  "names": ["schema_exports", "__export", "abTestParticipants", "abTests", "analyticsEvents", "conversionFunnels", "favoriteHooks", "funnelEvents", "hookGenerations", "insertFavoriteHookSchema", "insertHookGenerationSchema", "insertUserRecentHookSchema", "insertUserSchema", "loginSchema", "registerSchema", "sessions", "upsertUserSchema", "userConsent", "userRecentHooks", "users", "sql", "pgTable", "text", "varchar", "jsonb", "timestamp", "boolean", "index", "integer", "check", "createInsertSchema", "z", "init_schema", "__esmMin", "table", "db_exports", "__export", "db", "initializeDatabase", "pool", "testDatabaseConnection", "Pool", "neonConfig", "drizzle", "ws", "timeout", "testQuery", "timeoutPromise", "_", "reject", "result", "error", "attempt", "connectionTest", "resolve", "dbUrl", "isRailwayEnvironment", "isRailwayInternalUrl", "init_db", "__esmMin", "init_schema", "host", "schema_exports", "stripe_exports", "__export", "SUBSCRIPTION_PLANS", "cancelSubscription", "createBillingPortalSession", "createSubscription", "getOrCreateCustomer", "getSubscriptionStatus", "handleStripeWebhook", "Stripe", "userId", "email", "name", "user", "storage", "customer", "stripe", "error", "priceId", "promotionCode", "customerId", "subscriptionData", "subscription", "returnUrl", "subscriptionId", "event", "invoice", "failedInvoice", "canceledSubscription", "updatedSubscription", "subCustomer", "init_stripe", "__esmMin", "init_storage", "eq", "desc", "inArray", "and", "gte", "lte", "sql", "DatabaseStorage", "storage", "init_storage", "__esmMin", "init_schema", "init_db", "id", "user", "db", "users", "email", "username", "firebaseUid", "userData", "updates", "existingUser", "userId", "newUsedCredits", "freeCredits", "usedCredits", "remainingCredits", "isAtLimit", "modelType", "currentUsed", "plan", "SUBSCRIPTION_PLANS", "planKey", "planLimits", "proUsed", "draftUsed", "remainingProGenerations", "remainingDraftGenerations", "weeklyReset", "canGenerate", "reason", "insertGeneration", "generation", "hookGenerations", "insertFavorite", "favorite", "favoriteHooks", "insertRecentHook", "recentHook", "userRecentHooks", "allRecentHooks", "hooksToDelete", "hook", "customerId", "updated", "error", "stripeInfo", "status", "userIds", "limit", "dateFrom", "dateTo", "query", "now", "express", "init_storage", "init_schema", "express", "createServer", "OpenAI", "openai", "HOOK_TAXONOMY", "selectTaxonomyCategories", "contentType", "objective", "createTaxonomyBrief", "categories", "entries", "category", "categoryData", "hookId", "hookData", "PLATFORM_CONSTRAINTS", "validateHookStructure", "hook", "platform", "issues", "wordCount", "constraints", "minWords", "maxWords", "repairHook", "repairPrompt", "repairedText", "error", "detectContentType", "topic", "educationalKeywords", "storytellingKeywords", "topicLower", "objectiveLower", "hasEducational", "keyword", "hasStorytelling", "enhanceHookWithScoring", "params", "baseScore", "wordCountScore", "frameworkBonus", "objectiveBonus", "compositeScore", "finalScore", "breakdown", "createTopThreeVariants", "hooks", "a", "b", "index", "generateTriModalHooks", "user", "contentTypeStrategy", "selectedCategories", "taxonomyBrief", "systemPrompt", "userPrompt", "controller", "timeoutId", "response", "content", "cleanContent", "result", "generateFallbackHooks", "processedHooks", "validation", "repairedHook", "topThreeVariants", "simplifiedPrompt", "enhancedHooks", "generateStaticFallback", "template", "initializeApp", "cert", "getApps", "getAuth", "credentials", "error", "adminAuth", "verifyFirebaseToken", "idToken", "checkRevoked", "init_storage", "getBearerToken", "req", "auth", "firebaseAuthMiddleware", "res", "next", "token", "decoded", "verifyFirebaseToken", "user", "storage", "dbError", "err", "rateLimit", "helmet", "apiLimiter", "generateHooksLimiter", "sanitizeInput", "req", "res", "next", "sanitizeString", "str", "sanitizeObject", "obj", "sanitized", "key", "securityHeaders", "validateRequestSize", "contentLength", "init_stripe", "Stripe", "stripe", "Stripe", "registerRoutes", "app", "securityHeaders", "validateRequestSize", "sanitizeInput", "apiLimiter", "req", "res", "validationResult", "registerSchema", "issue", "email", "password", "firstName", "lastName", "userRecord", "adminAuth", "customToken", "userData", "storage", "dbError", "firebaseError", "error", "loginSchema", "firebaseAuthMiddleware", "firebaseUser", "user", "isNewUser", "needsOnboarding", "userId", "profileData", "insertUserSchema", "updates", "creditStatus", "modelType", "generationStatus", "generateHooksLimiter", "platform", "objective", "topic", "result", "generateTriModalHooks", "generation", "generations", "favoriteData", "insertFavoriteHookSchema", "favorite", "favorites", "generationId", "headers", "rows", "hook", "csv", "SUBSCRIPTION_PLANS", "plan", "promotionCode", "planKey", "priceId", "subscription", "createSubscription", "getSubscriptionStatus", "returnUrl", "portalUrl", "createBillingPortalSession", "cancelSubscription", "express", "sig", "webhookSecret", "event", "handleStripeWebhook", "createServer", "express", "fs", "path", "createViteServer", "createLogger", "defineConfig", "react", "path", "vite_config_default", "mode", "assetInfo", "info", "ext", "nanoid", "viteLogger", "createLogger", "setupVite", "app", "server", "serverOptions", "vite", "createViteServer", "vite_config_default", "viteLogger", "msg", "options", "req", "res", "next", "url", "clientTemplate", "path", "template", "fs", "nanoid", "page", "e", "serveStatic", "distPath", "express", "filePath", "_req", "productionSecurityHeaders", "req", "res", "next", "forceHTTPS", "z", "envSchema", "validatedEnv", "validateEnvironment", "error", "missingVars", "err", "getEnv", "isProduction", "validateEnvironment", "Logger", "getEnv", "level", "message", "data", "error", "entry", "isProduction", "levels", "currentLevelIndex", "prefix", "dataStr", "req", "res", "duration", "statusCode", "operation", "table", "service", "logger", "init_db", "history", "validateEnvironment", "app", "express", "req", "res", "startTime", "env", "getEnv", "healthCheck", "testDatabaseConnection", "dbTest", "pool", "conversionTablesCheck", "conversionTablesResult", "_", "reject", "tableNames", "row", "error", "logger", "responseTime", "isProduction", "forceHTTPS", "productionSecurityHeaders", "next", "start", "duration", "initializeDatabase", "server", "registerRoutes", "err", "_req", "_next", "status", "message", "setupVite", "serveStatic", "port", "httpServer", "gracefulShutdown", "signal", "shutdownTimeout", "reason", "promise"]
}
